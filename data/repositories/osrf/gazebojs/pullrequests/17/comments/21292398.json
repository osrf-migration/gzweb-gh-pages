{"links": {"self": {"href": "data/repositories/osrf/gazebojs/pullrequests/17/comments/21292398.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gazebojs/diff/mohamd_ayman/gazebojs:None..None?path=index.js"}, "html": {"href": "#!/osrf/gazebojs/pull-requests/17/_/diff#comment-21292398"}}, "parent": {"id": 21288891, "links": {"self": {"href": "data/repositories/osrf/gazebojs/pullrequests/17/comments/21288891.json"}, "html": {"href": "#!/osrf/gazebojs/pull-requests/17/_/diff#comment-21288891"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/osrf/gazebojs/pullrequests/17.json"}, "html": {"href": "#!/osrf/gazebojs/pull-requests/17"}}, "title": "Fixing 'toJson' option in subscribe."}, "content": {"raw": "It wasn't working because the check the options had a bug. Putting the check inside the subscription only moved the bug. Try something like:\n\n\n```\n#!js\n\nGazebo.prototype.subscribe = function(type, topic, cb, options) {\n    var latch = false\n    var json = true\n    if(options){\n        if (typeof options['latch'] == \"boolean\") latch = options.latch\n        if (typeof options['toJson'] == \"boolean\") json = options.toJson\n    }\n    this.sim.subscribe(type, topic, function(err, data) {\n        if(err){\n            cb(err)\n            return\n        }\n        var result = data\n        if (json) {\n            // parse the string into a json msg\n            result = JSON.parse(data)\n        }\n        cb(err, result)\n    }, latch)\n}\n```\n", "markup": "markdown", "html": "<p>It wasn't working because the check the options had a bug. Putting the check inside the subscription only moved the bug. Try something like:</p>\n<div class=\"codehilite language-js\"><pre><span></span><span class=\"nx\">Gazebo</span><span class=\"p\">.</span><span class=\"nx\">prototype</span><span class=\"p\">.</span><span class=\"nx\">subscribe</span> <span class=\"o\">=</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">type</span><span class=\"p\">,</span> <span class=\"nx\">topic</span><span class=\"p\">,</span> <span class=\"nx\">cb</span><span class=\"p\">,</span> <span class=\"nx\">options</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"kd\">var</span> <span class=\"nx\">latch</span> <span class=\"o\">=</span> <span class=\"kc\">false</span>\n    <span class=\"kd\">var</span> <span class=\"nx\">json</span> <span class=\"o\">=</span> <span class=\"kc\">true</span>\n    <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"nx\">options</span><span class=\"p\">){</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"k\">typeof</span> <span class=\"nx\">options</span><span class=\"p\">[</span><span class=\"s1\">&#39;latch&#39;</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;boolean&quot;</span><span class=\"p\">)</span> <span class=\"nx\">latch</span> <span class=\"o\">=</span> <span class=\"nx\">options</span><span class=\"p\">.</span><span class=\"nx\">latch</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"k\">typeof</span> <span class=\"nx\">options</span><span class=\"p\">[</span><span class=\"s1\">&#39;toJson&#39;</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;boolean&quot;</span><span class=\"p\">)</span> <span class=\"nx\">json</span> <span class=\"o\">=</span> <span class=\"nx\">options</span><span class=\"p\">.</span><span class=\"nx\">toJson</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">sim</span><span class=\"p\">.</span><span class=\"nx\">subscribe</span><span class=\"p\">(</span><span class=\"nx\">type</span><span class=\"p\">,</span> <span class=\"nx\">topic</span><span class=\"p\">,</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">,</span> <span class=\"nx\">data</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">){</span>\n            <span class=\"nx\">cb</span><span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span>\n        <span class=\"p\">}</span>\n        <span class=\"kd\">var</span> <span class=\"nx\">result</span> <span class=\"o\">=</span> <span class=\"nx\">data</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">json</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"c1\">// parse the string into a json msg</span>\n            <span class=\"nx\">result</span> <span class=\"o\">=</span> <span class=\"nx\">JSON</span><span class=\"p\">.</span><span class=\"nx\">parse</span><span class=\"p\">(</span><span class=\"nx\">data</span><span class=\"p\">)</span>\n        <span class=\"p\">}</span>\n        <span class=\"nx\">cb</span><span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">,</span> <span class=\"nx\">result</span><span class=\"p\">)</span>\n    <span class=\"p\">},</span> <span class=\"nx\">latch</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</pre></div>", "type": "rendered"}, "created_on": "2016-07-21T00:40:04.621762+00:00", "user": {"display_name": "Hugo Boyer", "uuid": "{3d87874e-7099-4981-b04f-57f0272faa7d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d87874e-7099-4981-b04f-57f0272faa7d%7D"}, "html": {"href": "https://bitbucket.org/%7B3d87874e-7099-4981-b04f-57f0272faa7d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/21198da8539b599e3633017f5f5f8150d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsHB-6.png"}}, "nickname": "hugomatic", "type": "user", "account_id": "557058:869c02bb-b246-4cdc-9db3-0064e8add185"}, "inline": {"to": null, "from": null, "outdated": false, "path": "index.js"}, "updated_on": "2016-07-21T00:40:04.627089+00:00", "type": "pullrequest_comment", "id": 21292398}