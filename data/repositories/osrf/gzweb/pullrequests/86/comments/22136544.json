{"links": {"self": {"href": "data/repositories/osrf/gzweb/pullrequests/86/comments/22136544.json"}, "html": {"href": "#!/osrf/gzweb/pull-requests/86/_/diff#comment-22136544"}}, "parent": {"id": 22080625, "links": {"self": {"href": "data/repositories/osrf/gzweb/pullrequests/86/comments/22080625.json"}, "html": {"href": "#!/osrf/gzweb/pull-requests/86/_/diff#comment-22080625"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 86, "links": {"self": {"href": "data/repositories/osrf/gzweb/pullrequests/86.json"}, "html": {"href": "#!/osrf/gzweb/pull-requests/86"}}, "title": "gazebow"}, "content": {"raw": "This bug (that I wrote for you) affects OSRF because we often use Gazebo8 from source. Can you try this:\n\n```\n#!js\n\n// msgLocator.js\n'use strict'\n\nconst path = require('path')\nconst child_process = require('child_process')\nconst gazeboInfo = child_process.execSync('ls -l `which gazebo`').toString().trim()\n\nlet protoDir = null\n\n// returns the location of a protobuf full path\n// proto is the short file name of the message\nfunction getProtoPath(proto) {\n\n  if (!protoDir) {\n    const toks = gazeboInfo.split(' ')\n    // console.log('tokens',toks)\n    const gazeboDir = path.dirname(toks[8])\n    // console.log(gazeboDir)\n    const verToks = toks[10].split('-')\n    // console.log('vertoks', verToks)\n    const version = verToks[1]\n    // console.log('version', version)\n    const maj = version.split('.')[0]\n    // console.log('maj', maj)\n    protoDir = path.dirname(gazeboDir) + '/include/gazebo-' + maj +\n     '/gazebo/msgs/proto'\n\n  }\n  return protoDir + '/' +  proto + '.proto'\n}\n\n```\n\nto use it:\n\n\n```\n#!js\n\nconst msgLocator = require('./msgLocator')\nfs.existsSync(x.getProtoPath('physics'))\n\n```\nit should return true\n", "markup": "markdown", "html": "<p>This bug (that I wrote for you) affects OSRF because we often use Gazebo8 from source. Can you try this:</p>\n<div class=\"codehilite language-js\"><pre><span></span><span class=\"c1\">// msgLocator.js</span>\n<span class=\"s1\">&#39;use strict&#39;</span>\n\n<span class=\"kr\">const</span> <span class=\"nx\">path</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">&#39;path&#39;</span><span class=\"p\">)</span>\n<span class=\"kr\">const</span> <span class=\"nx\">child_process</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">&#39;child_process&#39;</span><span class=\"p\">)</span>\n<span class=\"kr\">const</span> <span class=\"nx\">gazeboInfo</span> <span class=\"o\">=</span> <span class=\"nx\">child_process</span><span class=\"p\">.</span><span class=\"nx\">execSync</span><span class=\"p\">(</span><span class=\"s1\">&#39;ls -l `which gazebo`&#39;</span><span class=\"p\">).</span><span class=\"nx\">toString</span><span class=\"p\">().</span><span class=\"nx\">trim</span><span class=\"p\">()</span>\n\n<span class=\"kd\">let</span> <span class=\"nx\">protoDir</span> <span class=\"o\">=</span> <span class=\"kc\">null</span>\n\n<span class=\"c1\">// returns the location of a protobuf full path</span>\n<span class=\"c1\">// proto is the short file name of the message</span>\n<span class=\"kd\">function</span> <span class=\"nx\">getProtoPath</span><span class=\"p\">(</span><span class=\"nx\">proto</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"o\">!</span><span class=\"nx\">protoDir</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"kr\">const</span> <span class=\"nx\">toks</span> <span class=\"o\">=</span> <span class=\"nx\">gazeboInfo</span><span class=\"p\">.</span><span class=\"nx\">split</span><span class=\"p\">(</span><span class=\"s1\">&#39; &#39;</span><span class=\"p\">)</span>\n    <span class=\"c1\">// console.log(&#39;tokens&#39;,toks)</span>\n    <span class=\"kr\">const</span> <span class=\"nx\">gazeboDir</span> <span class=\"o\">=</span> <span class=\"nx\">path</span><span class=\"p\">.</span><span class=\"nx\">dirname</span><span class=\"p\">(</span><span class=\"nx\">toks</span><span class=\"p\">[</span><span class=\"mi\">8</span><span class=\"p\">])</span>\n    <span class=\"c1\">// console.log(gazeboDir)</span>\n    <span class=\"kr\">const</span> <span class=\"nx\">verToks</span> <span class=\"o\">=</span> <span class=\"nx\">toks</span><span class=\"p\">[</span><span class=\"mi\">10</span><span class=\"p\">].</span><span class=\"nx\">split</span><span class=\"p\">(</span><span class=\"s1\">&#39;-&#39;</span><span class=\"p\">)</span>\n    <span class=\"c1\">// console.log(&#39;vertoks&#39;, verToks)</span>\n    <span class=\"kr\">const</span> <span class=\"nx\">version</span> <span class=\"o\">=</span> <span class=\"nx\">verToks</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n    <span class=\"c1\">// console.log(&#39;version&#39;, version)</span>\n    <span class=\"kr\">const</span> <span class=\"nx\">maj</span> <span class=\"o\">=</span> <span class=\"nx\">version</span><span class=\"p\">.</span><span class=\"nx\">split</span><span class=\"p\">(</span><span class=\"s1\">&#39;.&#39;</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n    <span class=\"c1\">// console.log(&#39;maj&#39;, maj)</span>\n    <span class=\"nx\">protoDir</span> <span class=\"o\">=</span> <span class=\"nx\">path</span><span class=\"p\">.</span><span class=\"nx\">dirname</span><span class=\"p\">(</span><span class=\"nx\">gazeboDir</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;/include/gazebo-&#39;</span> <span class=\"o\">+</span> <span class=\"nx\">maj</span> <span class=\"o\">+</span>\n     <span class=\"s1\">&#39;/gazebo/msgs/proto&#39;</span>\n\n  <span class=\"p\">}</span>\n  <span class=\"k\">return</span> <span class=\"nx\">protoDir</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;/&#39;</span> <span class=\"o\">+</span>  <span class=\"nx\">proto</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;.proto&#39;</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>to use it:</p>\n<div class=\"codehilite language-js\"><pre><span></span><span class=\"kr\">const</span> <span class=\"nx\">msgLocator</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">&#39;./msgLocator&#39;</span><span class=\"p\">)</span>\n<span class=\"nx\">fs</span><span class=\"p\">.</span><span class=\"nx\">existsSync</span><span class=\"p\">(</span><span class=\"nx\">x</span><span class=\"p\">.</span><span class=\"nx\">getProtoPath</span><span class=\"p\">(</span><span class=\"s1\">&#39;physics&#39;</span><span class=\"p\">))</span>\n</pre></div>\n\n\n<p>it should return true</p>", "type": "rendered"}, "created_on": "2016-08-09T22:23:48.806432+00:00", "user": {"display_name": "Hugo Boyer", "uuid": "{3d87874e-7099-4981-b04f-57f0272faa7d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d87874e-7099-4981-b04f-57f0272faa7d%7D"}, "html": {"href": "https://bitbucket.org/%7B3d87874e-7099-4981-b04f-57f0272faa7d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/21198da8539b599e3633017f5f5f8150d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsHB-6.png"}}, "nickname": "hugomatic", "type": "user", "account_id": "557058:869c02bb-b246-4cdc-9db3-0064e8add185"}, "updated_on": "2016-08-09T22:23:48.818602+00:00", "type": "pullrequest_comment", "id": 22136544}