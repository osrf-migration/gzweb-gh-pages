{"rendered": {"reason": {"raw": "will break it into small PRs", "markup": "markdown", "html": "<p>will break it into small PRs</p>", "type": "rendered"}, "description": {"raw": "To test the PR:\r\n\r\nopen ` http/client/sdfViewerExample.html `\r\n\r\n1. for the materials file, you can either use thee one that I made from [here](https://gist.github.com/MohmadAyman/4c2f904d279d63175acd361847ba03da)\r\n\r\nOr you can generate the `materials json` file yourself using the `material-parser` npm package running those commands:\r\n\r\n     1. `npm init` \r\n\r\n     2. `npm install material-parser`\r\n\r\n     3. `node node_modules/material-parser/index.js <path to gzweb assets>`\r\n\r\n2. select a folder containing a model <all it's assets included Textures, meshes ...etc>\r\n\r\n3. View the model.\r\n \r\nThe materials for the object files are not handled yet, I'm working on a PR in THREE.js that would allow us to handle them.\r\n\r\n***** set up grunt and cmake\r\n\r\n* simple demo working\r\n\r\n* materials added as an argument,  grunt files order fixed\r\n\r\n* added a separate file for sdfviewer_gui, removed unused code from example html\r\n\r\n* use only single quotes in karma and add angular mocks\r\n\r\n* minimal gui used", "markup": "markdown", "html": "<p>To test the PR:</p>\n<p>open <code>http/client/sdfViewerExample.html</code></p>\n<ol>\n<li>for the materials file, you can either use thee one that I made from <a data-is-external-link=\"true\" href=\"https://gist.github.com/MohmadAyman/4c2f904d279d63175acd361847ba03da\" rel=\"nofollow\">here</a></li>\n</ol>\n<p>Or you can generate the <code>materials json</code> file yourself using the <code>material-parser</code> npm package running those commands:</p>\n<div class=\"codehilite\"><pre><span></span> 1. `npm init`\n\n 2. `npm install material-parser`\n\n 3. `node node_modules/material-parser/index.js &lt;path to gzweb assets&gt;`\n</pre></div>\n\n\n<ol>\n<li>\n<p>select a folder containing a model &lt;all it's assets included Textures, meshes ...etc&gt;</p>\n</li>\n<li>\n<p>View the model.</p>\n</li>\n</ol>\n<p>The materials for the object files are not handled yet, I'm working on a PR in THREE.js that would allow us to handle them.</p>\n<p><strong>*</strong> set up grunt and cmake</p>\n<ul>\n<li>\n<p>simple demo working</p>\n</li>\n<li>\n<p>materials added as an argument,  grunt files order fixed</p>\n</li>\n<li>\n<p>added a separate file for sdfviewer_gui, removed unused code from example html</p>\n</li>\n<li>\n<p>use only single quotes in karma and add angular mocks</p>\n</li>\n<li>\n<p>minimal gui used</p>\n</li>\n</ul>", "type": "rendered"}, "title": {"raw": "Gzweb as sdfparser", "markup": "markdown", "html": "<p>Gzweb as sdfparser</p>", "type": "rendered"}}, "type": "pullrequest", "description": "To test the PR:\r\n\r\nopen ` http/client/sdfViewerExample.html `\r\n\r\n1. for the materials file, you can either use thee one that I made from [here](https://gist.github.com/MohmadAyman/4c2f904d279d63175acd361847ba03da)\r\n\r\nOr you can generate the `materials json` file yourself using the `material-parser` npm package running those commands:\r\n\r\n     1. `npm init` \r\n\r\n     2. `npm install material-parser`\r\n\r\n     3. `node node_modules/material-parser/index.js <path to gzweb assets>`\r\n\r\n2. select a folder containing a model <all it's assets included Textures, meshes ...etc>\r\n\r\n3. View the model.\r\n \r\nThe materials for the object files are not handled yet, I'm working on a PR in THREE.js that would allow us to handle them.\r\n\r\n***** set up grunt and cmake\r\n\r\n* simple demo working\r\n\r\n* materials added as an argument,  grunt files order fixed\r\n\r\n* added a separate file for sdfviewer_gui, removed unused code from example html\r\n\r\n* use only single quotes in karma and add angular mocks\r\n\r\n* minimal gui used", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gzweb/pullrequests/117/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gzweb/diffstat/mohamd_ayman/gzweb:d20181afe650%0D54b28e5e49a2?from_pullrequest_id=117"}, "commits": {"href": "data/repositories/osrf/gzweb/pullrequests/117/commits.json"}, "self": {"href": "data/repositories/osrf/gzweb/pullrequests/117.json"}, "comments": {"href": "data/repositories/osrf/gzweb/pullrequests/117/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gzweb/pullrequests/117/merge"}, "html": {"href": "#!/osrf/gzweb/pull-requests/117"}, "activity": {"href": "data/repositories/osrf/gzweb/pullrequests/117/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gzweb/diff/mohamd_ayman/gzweb:d20181afe650%0D54b28e5e49a2?from_pullrequest_id=117"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gzweb/pullrequests/117/approve"}, "statuses": {"href": "data/repositories/osrf/gzweb/pullrequests/117/statuses_page=1.json"}}, "title": "Gzweb as sdfparser", "close_source_branch": false, "reviewers": [], "id": 117, "destination": {"commit": {"hash": "54b28e5e49a2", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gzweb/commit/54b28e5e49a2.json"}, "html": {"href": "#!/osrf/gzweb/commits/54b28e5e49a2"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gzweb.json"}, "html": {"href": "#!/osrf/gzweb"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3e2fc3f2-dc25-453b-9792-943c743d9b40}ts=1609263"}}, "type": "repository", "name": "gzweb", "full_name": "osrf/gzweb", "uuid": "{3e2fc3f2-dc25-453b-9792-943c743d9b40}"}, "branch": {"name": "default"}}, "created_on": "2017-09-12T20:08:28.857733+00:00", "summary": {"raw": "To test the PR:\r\n\r\nopen ` http/client/sdfViewerExample.html `\r\n\r\n1. for the materials file, you can either use thee one that I made from [here](https://gist.github.com/MohmadAyman/4c2f904d279d63175acd361847ba03da)\r\n\r\nOr you can generate the `materials json` file yourself using the `material-parser` npm package running those commands:\r\n\r\n     1. `npm init` \r\n\r\n     2. `npm install material-parser`\r\n\r\n     3. `node node_modules/material-parser/index.js <path to gzweb assets>`\r\n\r\n2. select a folder containing a model <all it's assets included Textures, meshes ...etc>\r\n\r\n3. View the model.\r\n \r\nThe materials for the object files are not handled yet, I'm working on a PR in THREE.js that would allow us to handle them.\r\n\r\n***** set up grunt and cmake\r\n\r\n* simple demo working\r\n\r\n* materials added as an argument,  grunt files order fixed\r\n\r\n* added a separate file for sdfviewer_gui, removed unused code from example html\r\n\r\n* use only single quotes in karma and add angular mocks\r\n\r\n* minimal gui used", "markup": "markdown", "html": "<p>To test the PR:</p>\n<p>open <code>http/client/sdfViewerExample.html</code></p>\n<ol>\n<li>for the materials file, you can either use thee one that I made from <a data-is-external-link=\"true\" href=\"https://gist.github.com/MohmadAyman/4c2f904d279d63175acd361847ba03da\" rel=\"nofollow\">here</a></li>\n</ol>\n<p>Or you can generate the <code>materials json</code> file yourself using the <code>material-parser</code> npm package running those commands:</p>\n<div class=\"codehilite\"><pre><span></span> 1. `npm init`\n\n 2. `npm install material-parser`\n\n 3. `node node_modules/material-parser/index.js &lt;path to gzweb assets&gt;`\n</pre></div>\n\n\n<ol>\n<li>\n<p>select a folder containing a model &lt;all it's assets included Textures, meshes ...etc&gt;</p>\n</li>\n<li>\n<p>View the model.</p>\n</li>\n</ol>\n<p>The materials for the object files are not handled yet, I'm working on a PR in THREE.js that would allow us to handle them.</p>\n<p><strong>*</strong> set up grunt and cmake</p>\n<ul>\n<li>\n<p>simple demo working</p>\n</li>\n<li>\n<p>materials added as an argument,  grunt files order fixed</p>\n</li>\n<li>\n<p>added a separate file for sdfviewer_gui, removed unused code from example html</p>\n</li>\n<li>\n<p>use only single quotes in karma and add angular mocks</p>\n</li>\n<li>\n<p>minimal gui used</p>\n</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "d20181afe650", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mohamd_ayman/gzweb/commit/d20181afe650"}, "html": {"href": "https://bitbucket.org/mohamd_ayman/gzweb/commits/d20181afe650"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mohamd_ayman/gzweb"}, "html": {"href": "https://bitbucket.org/mohamd_ayman/gzweb"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f16f3476-516f-43e7-b76e-9691a8ed1459}ts=c_plus_plus"}}, "type": "repository", "name": "gzweb", "full_name": "mohamd_ayman/gzweb", "uuid": "{f16f3476-516f-43e7-b76e-9691a8ed1459}"}, "branch": {"name": "gzweb_as_sdfparser"}}, "comment_count": 79, "state": "DECLINED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2017-10-09T16:09:03.165785+00:00", "type": "participant", "approved": false, "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}, {"role": "PARTICIPANT", "participated_on": "2017-10-11T16:08:06.489119+00:00", "type": "participant", "approved": false, "user": {"display_name": "Mohamd Ayman", "uuid": "{72e87935-5983-4f36-8505-0c88a6493930}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B72e87935-5983-4f36-8505-0c88a6493930%7D"}, "html": {"href": "https://bitbucket.org/%7B72e87935-5983-4f36-8505-0c88a6493930%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:53a1879d-b572-46c9-97d3-8fa52b2ff8a7/d5d765e0-f86b-4c0d-93ed-c67429f1f465/128"}}, "nickname": "Mohamd Ayman", "type": "user", "account_id": "557058:53a1879d-b572-46c9-97d3-8fa52b2ff8a7"}}, {"role": "PARTICIPANT", "participated_on": "2017-10-09T22:54:45.115977+00:00", "type": "participant", "approved": false, "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}}], "reason": "will break it into small PRs", "updated_on": "2017-10-14T02:15:03.437936+00:00", "author": {"display_name": "Mohamd Ayman", "uuid": "{72e87935-5983-4f36-8505-0c88a6493930}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B72e87935-5983-4f36-8505-0c88a6493930%7D"}, "html": {"href": "https://bitbucket.org/%7B72e87935-5983-4f36-8505-0c88a6493930%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:53a1879d-b572-46c9-97d3-8fa52b2ff8a7/d5d765e0-f86b-4c0d-93ed-c67429f1f465/128"}}, "nickname": "Mohamd Ayman", "type": "user", "account_id": "557058:53a1879d-b572-46c9-97d3-8fa52b2ff8a7"}, "merge_commit": null, "closed_by": {"display_name": "Mohamd Ayman", "uuid": "{72e87935-5983-4f36-8505-0c88a6493930}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B72e87935-5983-4f36-8505-0c88a6493930%7D"}, "html": {"href": "https://bitbucket.org/%7B72e87935-5983-4f36-8505-0c88a6493930%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:53a1879d-b572-46c9-97d3-8fa52b2ff8a7/d5d765e0-f86b-4c0d-93ed-c67429f1f465/128"}}, "nickname": "Mohamd Ayman", "type": "user", "account_id": "557058:53a1879d-b572-46c9-97d3-8fa52b2ff8a7"}}