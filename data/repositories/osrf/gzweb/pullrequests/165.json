{"rendered": {"description": {"raw": "The new `GZ3D.Ogre2Json` does on the browser what the `gzbridge`'s `OgreMaterialParser` and `ConfigLoader` do on the backend.\r\n\r\n---\r\n\r\nHow it works:\r\n\r\n1. It uses regex to convert an Ogre material script into JSON\r\n1. Stores that JSON into `this.materialObj`\r\n1. Collects specific material properties which are needed by `GZ3D.SdfParser`, following the same principle as `OgreMaterialParser`\r\n1. Emits a `material` event with the materials (just like `gziface` does with the materials parsed using C++)\r\n\r\n---\r\n\r\nOther notes:\r\n\r\n* The  example has been changed to make use of this, give it a try!\r\n* Added dependency on lodash for more convenient handling of deep object properties\r\n* Added the `npm run update-dev` command which concatenates files but doesn't lint or minify (convenient for developing)\r\n* The tests should also give a good idea of how the new functions work", "markup": "markdown", "html": "<p>The new <code>GZ3D.Ogre2Json</code> does on the browser what the <code>gzbridge</code>'s <code>OgreMaterialParser</code> and <code>ConfigLoader</code> do on the backend.</p>\n<hr />\n<p>How it works:</p>\n<ol>\n<li>It uses regex to convert an Ogre material script into JSON</li>\n<li>Stores that JSON into <code>this.materialObj</code></li>\n<li>Collects specific material properties which are needed by <code>GZ3D.SdfParser</code>, following the same principle as <code>OgreMaterialParser</code></li>\n<li>Emits a <code>material</code> event with the materials (just like <code>gziface</code> does with the materials parsed using C++)</li>\n</ol>\n<hr />\n<p>Other notes:</p>\n<ul>\n<li>The  example has been changed to make use of this, give it a try!</li>\n<li>Added dependency on lodash for more convenient handling of deep object properties</li>\n<li>Added the <code>npm run update-dev</code> command which concatenates files but doesn't lint or minify (convenient for developing)</li>\n<li>The tests should also give a good idea of how the new functions work</li>\n</ul>", "type": "rendered"}, "title": {"raw": "Client-side Ogre material parser", "markup": "markdown", "html": "<p>Client-side Ogre material parser</p>", "type": "rendered"}}, "type": "pullrequest", "description": "The new `GZ3D.Ogre2Json` does on the browser what the `gzbridge`'s `OgreMaterialParser` and `ConfigLoader` do on the backend.\r\n\r\n---\r\n\r\nHow it works:\r\n\r\n1. It uses regex to convert an Ogre material script into JSON\r\n1. Stores that JSON into `this.materialObj`\r\n1. Collects specific material properties which are needed by `GZ3D.SdfParser`, following the same principle as `OgreMaterialParser`\r\n1. Emits a `material` event with the materials (just like `gziface` does with the materials parsed using C++)\r\n\r\n---\r\n\r\nOther notes:\r\n\r\n* The  example has been changed to make use of this, give it a try!\r\n* Added dependency on lodash for more convenient handling of deep object properties\r\n* Added the `npm run update-dev` command which concatenates files but doesn't lint or minify (convenient for developing)\r\n* The tests should also give a good idea of how the new functions work", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gzweb/pullrequests/165/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gzweb/diffstat/osrf/gzweb:e23be52de0c9%0D5a7f0467f5ab?from_pullrequest_id=165"}, "commits": {"href": "data/repositories/osrf/gzweb/pullrequests/165/commits.json"}, "self": {"href": "data/repositories/osrf/gzweb/pullrequests/165.json"}, "comments": {"href": "data/repositories/osrf/gzweb/pullrequests/165/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gzweb/pullrequests/165/merge"}, "html": {"href": "#!/osrf/gzweb/pull-requests/165"}, "activity": {"href": "data/repositories/osrf/gzweb/pullrequests/165/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gzweb/diff/osrf/gzweb:e23be52de0c9%0D5a7f0467f5ab?from_pullrequest_id=165"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gzweb/pullrequests/165/approve"}, "statuses": {"href": "data/repositories/osrf/gzweb/pullrequests/165/statuses_page=1.json"}}, "title": "Client-side Ogre material parser", "close_source_branch": true, "reviewers": [], "id": 165, "destination": {"commit": {"hash": "5a7f0467f5ab", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gzweb/commit/5a7f0467f5ab.json"}, "html": {"href": "#!/osrf/gzweb/commits/5a7f0467f5ab"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gzweb.json"}, "html": {"href": "#!/osrf/gzweb"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3e2fc3f2-dc25-453b-9792-943c743d9b40}ts=1609263"}}, "type": "repository", "name": "gzweb", "full_name": "osrf/gzweb", "uuid": "{3e2fc3f2-dc25-453b-9792-943c743d9b40}"}, "branch": {"name": "default"}}, "created_on": "2018-05-16T20:18:54.081083+00:00", "summary": {"raw": "The new `GZ3D.Ogre2Json` does on the browser what the `gzbridge`'s `OgreMaterialParser` and `ConfigLoader` do on the backend.\r\n\r\n---\r\n\r\nHow it works:\r\n\r\n1. It uses regex to convert an Ogre material script into JSON\r\n1. Stores that JSON into `this.materialObj`\r\n1. Collects specific material properties which are needed by `GZ3D.SdfParser`, following the same principle as `OgreMaterialParser`\r\n1. Emits a `material` event with the materials (just like `gziface` does with the materials parsed using C++)\r\n\r\n---\r\n\r\nOther notes:\r\n\r\n* The  example has been changed to make use of this, give it a try!\r\n* Added dependency on lodash for more convenient handling of deep object properties\r\n* Added the `npm run update-dev` command which concatenates files but doesn't lint or minify (convenient for developing)\r\n* The tests should also give a good idea of how the new functions work", "markup": "markdown", "html": "<p>The new <code>GZ3D.Ogre2Json</code> does on the browser what the <code>gzbridge</code>'s <code>OgreMaterialParser</code> and <code>ConfigLoader</code> do on the backend.</p>\n<hr />\n<p>How it works:</p>\n<ol>\n<li>It uses regex to convert an Ogre material script into JSON</li>\n<li>Stores that JSON into <code>this.materialObj</code></li>\n<li>Collects specific material properties which are needed by <code>GZ3D.SdfParser</code>, following the same principle as <code>OgreMaterialParser</code></li>\n<li>Emits a <code>material</code> event with the materials (just like <code>gziface</code> does with the materials parsed using C++)</li>\n</ol>\n<hr />\n<p>Other notes:</p>\n<ul>\n<li>The  example has been changed to make use of this, give it a try!</li>\n<li>Added dependency on lodash for more convenient handling of deep object properties</li>\n<li>Added the <code>npm run update-dev</code> command which concatenates files but doesn't lint or minify (convenient for developing)</li>\n<li>The tests should also give a good idea of how the new functions work</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "89ad70bf71f7", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gzweb/commit/89ad70bf71f7.json"}, "html": {"href": "#!/osrf/gzweb/commits/89ad70bf71f7"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gzweb.json"}, "html": {"href": "#!/osrf/gzweb"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3e2fc3f2-dc25-453b-9792-943c743d9b40}ts=1609263"}}, "type": "repository", "name": "gzweb", "full_name": "osrf/gzweb", "uuid": "{3e2fc3f2-dc25-453b-9792-943c743d9b40}"}, "branch": {"name": "ogre2json"}}, "comment_count": 14, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2018-05-26T00:14:54.173049+00:00", "type": "participant", "approved": false, "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}, {"role": "PARTICIPANT", "participated_on": "2018-05-26T00:12:36.088028+00:00", "type": "participant", "approved": true, "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}}], "reason": "", "updated_on": "2018-05-26T00:15:04.188419+00:00", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "merge_commit": {"hash": "e23be52de0c9", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gzweb/commit/e23be52de0c9.json"}, "html": {"href": "#!/osrf/gzweb/commits/e23be52de0c9"}}}, "closed_by": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}