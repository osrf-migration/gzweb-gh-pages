{"rendered": {"description": {"raw": "Fix issue #30.\r\n\r\n* [Gazebo's grid](https://bitbucket.org/osrf/gazebo/src/6f357235d464f26f5ffc61f90e17e67f788703f5/gazebo/rendering/Scene.cc?at=default#cl-2695) is composed of 2 grids:\r\n\r\n1.  20x20, step = 1, color (0.3,0.3,0.3,0.5)\r\n2. 4x4, step = 5, color (0.8, 0.8, 0.8, 0.5)\r\n\r\n* Gzweb uses Three.js's [GridHelper](https://github.com/mrdoob/three.js/blob/master/src/extras/helpers/GridHelper.js), which is a combination of 2 grids by default, but one of them is just a cross following X and Y. [This](#!/osrf/gzweb/pull-request/18/fixing-scene-colors/diff#Lgz3d/src/gzscene.jsT390) changes the default colors to those of Gazebo's.\r\n\r\n* Also changes Gzweb's rendered [ClearColor](#!/osrf/gzweb/pull-request/18/fixing-scene-colors/diff#Lgz3d/src/gzscene.jsT22) to `#b2b2b2` (178,178,178) to match Gazebo's background color.\r\n\r\n* The floor plane (Gazebo's ambient) is receiving the color Gazebo/Grey, so I didn't want to change it.\r\n\r\n* [Gazebo's ambient light](https://bitbucket.org/osrf/gazebo/src/6f357235d464f26f5ffc61f90e17e67f788703f5/gazebo/rendering/Scene.cc?at=default#cl-270) is (0.1, 0.1, 0.1, 0.1). Three.js's ambient light does not take an alpha value, so setting it to `#1a1a1a` (0.1, 0.1, 0.1) illuminates too much. I chose [a value](#!/osrf/gzweb/pull-request/18/fixing-scene-colors/diff#Lgz3d/src/gzscene.jsT28) so that after illumination, the floor gets the same color on both Gazebo and Gzweb: `#9b9b9b`.\r\n\r\n* After illumination, the grids have slightly different colors.\r\n\r\n* [These screenshots](https://www.dropbox.com/s/mt8t8faf2syf6wd/gzwebColors.png) show the results.\r\n\r\nIf a 4x4 lighter grid like Gazebo's is preferred, we will have to reconstruct Three.js's GridHelper from scratch.\r\n\r\nI'm not sure if the change is ambient light has a wanted effect on different models put in the scene.", "markup": "markdown", "html": "<p>Fix issue <a href=\"#!/osrf/gzweb/issues/30/make-the-grid-a-different-color-from-the\" rel=\"nofollow\" title=\"Make the grid a different color from the ground plane\" class=\"ap-connect-link\"><s>#30</s></a>.</p>\n<ul>\n<li><a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo/src/6f357235d464f26f5ffc61f90e17e67f788703f5/gazebo/rendering/Scene.cc?at=default#cl-2695\" rel=\"nofollow\">Gazebo's grid</a> is composed of 2 grids:</li>\n</ul>\n<ol>\n<li>20x20, step = 1, color (0.3,0.3,0.3,0.5)</li>\n<li>4x4, step = 5, color (0.8, 0.8, 0.8, 0.5)</li>\n</ol>\n<ul>\n<li>\n<p>Gzweb uses Three.js's <a data-is-external-link=\"true\" href=\"https://github.com/mrdoob/three.js/blob/master/src/extras/helpers/GridHelper.js\" rel=\"nofollow\">GridHelper</a>, which is a combination of 2 grids by default, but one of them is just a cross following X and Y. <a data-is-external-link=\"true\" href=\"#!/osrf/gzweb/pull-request/18/fixing-scene-colors/diff#Lgz3d/src/gzscene.jsT390\" rel=\"nofollow\">This</a> changes the default colors to those of Gazebo's.</p>\n</li>\n<li>\n<p>Also changes Gzweb's rendered <a data-is-external-link=\"true\" href=\"#!/osrf/gzweb/pull-request/18/fixing-scene-colors/diff#Lgz3d/src/gzscene.jsT22\" rel=\"nofollow\">ClearColor</a> to <code>#b2b2b2</code> (178,178,178) to match Gazebo's background color.</p>\n</li>\n<li>\n<p>The floor plane (Gazebo's ambient) is receiving the color Gazebo/Grey, so I didn't want to change it.</p>\n</li>\n<li>\n<p><a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo/src/6f357235d464f26f5ffc61f90e17e67f788703f5/gazebo/rendering/Scene.cc?at=default#cl-270\" rel=\"nofollow\">Gazebo's ambient light</a> is (0.1, 0.1, 0.1, 0.1). Three.js's ambient light does not take an alpha value, so setting it to <code>#1a1a1a</code> (0.1, 0.1, 0.1) illuminates too much. I chose <a data-is-external-link=\"true\" href=\"#!/osrf/gzweb/pull-request/18/fixing-scene-colors/diff#Lgz3d/src/gzscene.jsT28\" rel=\"nofollow\">a value</a> so that after illumination, the floor gets the same color on both Gazebo and Gzweb: <code>#9b9b9b</code>.</p>\n</li>\n<li>\n<p>After illumination, the grids have slightly different colors.</p>\n</li>\n<li>\n<p><a data-is-external-link=\"true\" href=\"https://www.dropbox.com/s/mt8t8faf2syf6wd/gzwebColors.png\" rel=\"nofollow\">These screenshots</a> show the results.</p>\n</li>\n</ul>\n<p>If a 4x4 lighter grid like Gazebo's is preferred, we will have to reconstruct Three.js's GridHelper from scratch.</p>\n<p>I'm not sure if the change is ambient light has a wanted effect on different models put in the scene.</p>", "type": "rendered"}, "title": {"raw": "Fixing scene colors", "markup": "markdown", "html": "<p>Fixing scene colors</p>", "type": "rendered"}}, "type": "pullrequest", "description": "Fix issue #30.\r\n\r\n* [Gazebo's grid](https://bitbucket.org/osrf/gazebo/src/6f357235d464f26f5ffc61f90e17e67f788703f5/gazebo/rendering/Scene.cc?at=default#cl-2695) is composed of 2 grids:\r\n\r\n1.  20x20, step = 1, color (0.3,0.3,0.3,0.5)\r\n2. 4x4, step = 5, color (0.8, 0.8, 0.8, 0.5)\r\n\r\n* Gzweb uses Three.js's [GridHelper](https://github.com/mrdoob/three.js/blob/master/src/extras/helpers/GridHelper.js), which is a combination of 2 grids by default, but one of them is just a cross following X and Y. [This](#!/osrf/gzweb/pull-request/18/fixing-scene-colors/diff#Lgz3d/src/gzscene.jsT390) changes the default colors to those of Gazebo's.\r\n\r\n* Also changes Gzweb's rendered [ClearColor](#!/osrf/gzweb/pull-request/18/fixing-scene-colors/diff#Lgz3d/src/gzscene.jsT22) to `#b2b2b2` (178,178,178) to match Gazebo's background color.\r\n\r\n* The floor plane (Gazebo's ambient) is receiving the color Gazebo/Grey, so I didn't want to change it.\r\n\r\n* [Gazebo's ambient light](https://bitbucket.org/osrf/gazebo/src/6f357235d464f26f5ffc61f90e17e67f788703f5/gazebo/rendering/Scene.cc?at=default#cl-270) is (0.1, 0.1, 0.1, 0.1). Three.js's ambient light does not take an alpha value, so setting it to `#1a1a1a` (0.1, 0.1, 0.1) illuminates too much. I chose [a value](#!/osrf/gzweb/pull-request/18/fixing-scene-colors/diff#Lgz3d/src/gzscene.jsT28) so that after illumination, the floor gets the same color on both Gazebo and Gzweb: `#9b9b9b`.\r\n\r\n* After illumination, the grids have slightly different colors.\r\n\r\n* [These screenshots](https://www.dropbox.com/s/mt8t8faf2syf6wd/gzwebColors.png) show the results.\r\n\r\nIf a 4x4 lighter grid like Gazebo's is preferred, we will have to reconstruct Three.js's GridHelper from scratch.\r\n\r\nI'm not sure if the change is ambient light has a wanted effect on different models put in the scene.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gzweb/pullrequests/18/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gzweb/diffstat/osrf/gzweb:fc1de4e8319a%0Dd136a4576a2b?from_pullrequest_id=18"}, "commits": {"href": "data/repositories/osrf/gzweb/pullrequests/18/commits.json"}, "self": {"href": "data/repositories/osrf/gzweb/pullrequests/18.json"}, "comments": {"href": "data/repositories/osrf/gzweb/pullrequests/18/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gzweb/pullrequests/18/merge"}, "html": {"href": "#!/osrf/gzweb/pull-requests/18"}, "activity": {"href": "data/repositories/osrf/gzweb/pullrequests/18/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gzweb/diff/osrf/gzweb:fc1de4e8319a%0Dd136a4576a2b?from_pullrequest_id=18"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gzweb/pullrequests/18/approve"}, "statuses": {"href": "data/repositories/osrf/gzweb/pullrequests/18/statuses_page=1.json"}}, "title": "Fixing scene colors", "close_source_branch": true, "reviewers": [{"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}], "id": 18, "destination": {"commit": {"hash": "d136a4576a2b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gzweb/commit/d136a4576a2b.json"}, "html": {"href": "#!/osrf/gzweb/commits/d136a4576a2b"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/gzweb.json"}, "html": {"href": "#!/osrf/gzweb"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3e2fc3f2-dc25-453b-9792-943c743d9b40}ts=1609263"}}, "type": "repository", "name": "gzweb", "full_name": "osrf/gzweb", "uuid": "{3e2fc3f2-dc25-453b-9792-943c743d9b40}"}, "branch": {"name": "default"}}, "created_on": "2014-01-17T16:37:32.984401+00:00", "summary": {"raw": "Fix issue #30.\r\n\r\n* [Gazebo's grid](https://bitbucket.org/osrf/gazebo/src/6f357235d464f26f5ffc61f90e17e67f788703f5/gazebo/rendering/Scene.cc?at=default#cl-2695) is composed of 2 grids:\r\n\r\n1.  20x20, step = 1, color (0.3,0.3,0.3,0.5)\r\n2. 4x4, step = 5, color (0.8, 0.8, 0.8, 0.5)\r\n\r\n* Gzweb uses Three.js's [GridHelper](https://github.com/mrdoob/three.js/blob/master/src/extras/helpers/GridHelper.js), which is a combination of 2 grids by default, but one of them is just a cross following X and Y. [This](#!/osrf/gzweb/pull-request/18/fixing-scene-colors/diff#Lgz3d/src/gzscene.jsT390) changes the default colors to those of Gazebo's.\r\n\r\n* Also changes Gzweb's rendered [ClearColor](#!/osrf/gzweb/pull-request/18/fixing-scene-colors/diff#Lgz3d/src/gzscene.jsT22) to `#b2b2b2` (178,178,178) to match Gazebo's background color.\r\n\r\n* The floor plane (Gazebo's ambient) is receiving the color Gazebo/Grey, so I didn't want to change it.\r\n\r\n* [Gazebo's ambient light](https://bitbucket.org/osrf/gazebo/src/6f357235d464f26f5ffc61f90e17e67f788703f5/gazebo/rendering/Scene.cc?at=default#cl-270) is (0.1, 0.1, 0.1, 0.1). Three.js's ambient light does not take an alpha value, so setting it to `#1a1a1a` (0.1, 0.1, 0.1) illuminates too much. I chose [a value](#!/osrf/gzweb/pull-request/18/fixing-scene-colors/diff#Lgz3d/src/gzscene.jsT28) so that after illumination, the floor gets the same color on both Gazebo and Gzweb: `#9b9b9b`.\r\n\r\n* After illumination, the grids have slightly different colors.\r\n\r\n* [These screenshots](https://www.dropbox.com/s/mt8t8faf2syf6wd/gzwebColors.png) show the results.\r\n\r\nIf a 4x4 lighter grid like Gazebo's is preferred, we will have to reconstruct Three.js's GridHelper from scratch.\r\n\r\nI'm not sure if the change is ambient light has a wanted effect on different models put in the scene.", "markup": "markdown", "html": "<p>Fix issue <a href=\"#!/osrf/gzweb/issues/30/make-the-grid-a-different-color-from-the\" rel=\"nofollow\" title=\"Make the grid a different color from the ground plane\" class=\"ap-connect-link\"><s>#30</s></a>.</p>\n<ul>\n<li><a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo/src/6f357235d464f26f5ffc61f90e17e67f788703f5/gazebo/rendering/Scene.cc?at=default#cl-2695\" rel=\"nofollow\">Gazebo's grid</a> is composed of 2 grids:</li>\n</ul>\n<ol>\n<li>20x20, step = 1, color (0.3,0.3,0.3,0.5)</li>\n<li>4x4, step = 5, color (0.8, 0.8, 0.8, 0.5)</li>\n</ol>\n<ul>\n<li>\n<p>Gzweb uses Three.js's <a data-is-external-link=\"true\" href=\"https://github.com/mrdoob/three.js/blob/master/src/extras/helpers/GridHelper.js\" rel=\"nofollow\">GridHelper</a>, which is a combination of 2 grids by default, but one of them is just a cross following X and Y. <a data-is-external-link=\"true\" href=\"#!/osrf/gzweb/pull-request/18/fixing-scene-colors/diff#Lgz3d/src/gzscene.jsT390\" rel=\"nofollow\">This</a> changes the default colors to those of Gazebo's.</p>\n</li>\n<li>\n<p>Also changes Gzweb's rendered <a data-is-external-link=\"true\" href=\"#!/osrf/gzweb/pull-request/18/fixing-scene-colors/diff#Lgz3d/src/gzscene.jsT22\" rel=\"nofollow\">ClearColor</a> to <code>#b2b2b2</code> (178,178,178) to match Gazebo's background color.</p>\n</li>\n<li>\n<p>The floor plane (Gazebo's ambient) is receiving the color Gazebo/Grey, so I didn't want to change it.</p>\n</li>\n<li>\n<p><a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo/src/6f357235d464f26f5ffc61f90e17e67f788703f5/gazebo/rendering/Scene.cc?at=default#cl-270\" rel=\"nofollow\">Gazebo's ambient light</a> is (0.1, 0.1, 0.1, 0.1). Three.js's ambient light does not take an alpha value, so setting it to <code>#1a1a1a</code> (0.1, 0.1, 0.1) illuminates too much. I chose <a data-is-external-link=\"true\" href=\"#!/osrf/gzweb/pull-request/18/fixing-scene-colors/diff#Lgz3d/src/gzscene.jsT28\" rel=\"nofollow\">a value</a> so that after illumination, the floor gets the same color on both Gazebo and Gzweb: <code>#9b9b9b</code>.</p>\n</li>\n<li>\n<p>After illumination, the grids have slightly different colors.</p>\n</li>\n<li>\n<p><a data-is-external-link=\"true\" href=\"https://www.dropbox.com/s/mt8t8faf2syf6wd/gzwebColors.png\" rel=\"nofollow\">These screenshots</a> show the results.</p>\n</li>\n</ul>\n<p>If a 4x4 lighter grid like Gazebo's is preferred, we will have to reconstruct Three.js's GridHelper from scratch.</p>\n<p>I'm not sure if the change is ambient light has a wanted effect on different models put in the scene.</p>", "type": "rendered"}, "source": {"commit": {"hash": "0e280938abed", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/chapulina/gzweb/commit/0e280938abed"}, "html": {"href": "https://bitbucket.org/chapulina/gzweb/commits/0e280938abed"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/chapulina/gzweb"}, "html": {"href": "https://bitbucket.org/chapulina/gzweb"}, "avatar": {"href": "data/bytebucket.org/ravatar/{25c9b0a5-21fe-428d-9134-b2541fa8a710}ts=c_plus_plus"}}, "type": "repository", "name": "gzweb", "full_name": "chapulina/gzweb", "uuid": "{25c9b0a5-21fe-428d-9134-b2541fa8a710}"}, "branch": {"name": "Colors"}}, "comment_count": 11, "state": "MERGED", "task_count": 0, "participants": [{"role": "REVIEWER", "participated_on": "2014-01-17T23:03:35.188947+00:00", "type": "participant", "approved": true, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"role": "PARTICIPANT", "participated_on": "2014-01-17T22:37:38.878865+00:00", "type": "participant", "approved": false, "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}, {"role": "REVIEWER", "participated_on": "2014-01-17T22:42:34.749994+00:00", "type": "participant", "approved": true, "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}}], "reason": "", "updated_on": "2014-01-17T23:17:18.326338+00:00", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "merge_commit": {"hash": "fc1de4e8319a", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/gzweb/commit/fc1de4e8319a.json"}, "html": {"href": "#!/osrf/gzweb/commits/fc1de4e8319a"}}}, "closed_by": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}}