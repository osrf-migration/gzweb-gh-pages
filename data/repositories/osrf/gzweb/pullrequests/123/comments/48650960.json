{"links": {"self": {"href": "data/repositories/osrf/gzweb/pullrequests/123/comments/48650960.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gzweb/diff/mohamd_ayman/gzweb:7e605fdee2ac..576579ae7349?path=gz3d%2Fsrc%2Fgzscene.js"}, "html": {"href": "#!/osrf/gzweb/pull-requests/123/_/diff#comment-48650960"}}, "parent": {"id": 48572057, "links": {"self": {"href": "data/repositories/osrf/gzweb/pullrequests/123/comments/48572057.json"}, "html": {"href": "#!/osrf/gzweb/pull-requests/123/_/diff#comment-48572057"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 123, "links": {"self": {"href": "data/repositories/osrf/gzweb/pullrequests/123.json"}, "html": {"href": "#!/osrf/gzweb/pull-requests/123"}}, "title": "View com"}, "content": {"raw": "Ok, so with the following patch, we can rotate the box to the link's frame and the lines get properly oriented (I also changed the order of the lines to have x-y-z):\n\n~~~\ndiff -r 1284c06117e6 gz3d/src/gzscene.js\n--- a/gz3d/src/gzscene.js\tWed Nov 01 18:52:39 2017 +0800\n+++ b/gz3d/src/gzscene.js\tThu Nov 02 09:10:36 2017 -0700\n@@ -2411,25 +2411,26 @@\n \n         COMVisual.crossLines = [];\n         box = new THREE.Box3();\n+\n         // w.r.t. world\n         box.setFromObject(child);\n \n-        // center vertices with object\n-        box.min.x = box.min.x - model.position.x - child.position.x;\n-        box.min.y = box.min.y - model.position.y - child.position.y;\n-        box.min.z = box.min.z - model.position.z - child.position.z;\n-        box.max.x = box.max.x - model.position.x - child.position.x;\n-        box.max.y = box.max.y - model.position.y - child.position.y;\n-        box.max.z = box.max.z - model.position.z - child.position.z;\n+        // w.r.t. child\n+        var worldToLocal = new THREE.Matrix4();\n+        worldToLocal.getInverse(child.matrixWorld);\n+        box.applyMatrix4(worldToLocal);\n \n-        points[0] = new THREE.Vector3(inertialPose.position.x, box.min.y,\n+        // X\n+        points[0] = new THREE.Vector3(box.min.x, inertialPose.position.y,\n           inertialPose.position.z);\n-        points[1] = new THREE.Vector3(inertialPose.position.x, box.max.y,\n+        points[1] = new THREE.Vector3(box.max.x, inertialPose.position.y,\n           inertialPose.position.z);\n-        points[2] = new THREE.Vector3(box.min.x, inertialPose.position.y,\n+        // Y\n+        points[2] = new THREE.Vector3(inertialPose.position.x, box.min.y,\n           inertialPose.position.z);\n-        points[3] = new THREE.Vector3(box.max.x, inertialPose.position.y,\n+        points[3] = new THREE.Vector3(inertialPose.position.x, box.max.y,\n           inertialPose.position.z);\n+        // Z\n         points[4] = new THREE.Vector3(inertialPose.position.x,\n           inertialPose.position.y, box.min.z);\n         points[5] = new THREE.Vector3(inertialPose.position.x,\n@@ -2447,8 +2448,8 @@\n         helperGeometry_3.vertices.push(points[4]);\n         helperGeometry_3.vertices.push(points[5]);\n \n-        var helperMaterial_1 = new THREE.LineBasicMaterial({color: 0x00ff00});\n-        var helperMaterial_2 = new THREE.LineBasicMaterial({color: 0xff0000});\n+        var helperMaterial_1 = new THREE.LineBasicMaterial({color: 0xff0000});\n+        var helperMaterial_2 = new THREE.LineBasicMaterial({color: 0x00ff00});\n         var helperMaterial_3 = new THREE.LineBasicMaterial({color: 0x0000ff});\n         line_1 = new THREE.Line(helperGeometry_1, helperMaterial_1,\n             THREE.LineSegments);\n~~~\n\n![comrot.png](data/bitbucket.org/repo/r77Gja/images/1552545840-comrot.png)\n\nBut you can see that the lines are wrongly scaled, this is especially visible for Y. This is happening because the bounding box we get with `box.setFromObject` is aligned with the world, so we're getting the first, but we want the second:\n\n![rotlink.png](data/bitbucket.org/repo/r77Gja/images/4289207856-rotlink.png)\n\nI haven't gone through the API searching for a way of getting this, do you know how to?", "markup": "markdown", "html": "<p>Ok, so with the following patch, we can rotate the box to the link's frame and the lines get properly oriented (I also changed the order of the lines to have x-y-z):</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gh\">diff -r 1284c06117e6 gz3d/src/gzscene.js</span>\n<span class=\"gd\">--- a/gz3d/src/gzscene.js   Wed Nov 01 18:52:39 2017 +0800</span>\n<span class=\"gi\">+++ b/gz3d/src/gzscene.js   Thu Nov 02 09:10:36 2017 -0700</span>\n<span class=\"gu\">@@ -2411,25 +2411,26 @@</span>\n\n         COMVisual.crossLines = [];\n         box = new THREE.Box3();\n<span class=\"gi\">+</span>\n         // w.r.t. world\n         box.setFromObject(child);\n\n<span class=\"gd\">-        // center vertices with object</span>\n<span class=\"gd\">-        box.min.x = box.min.x - model.position.x - child.position.x;</span>\n<span class=\"gd\">-        box.min.y = box.min.y - model.position.y - child.position.y;</span>\n<span class=\"gd\">-        box.min.z = box.min.z - model.position.z - child.position.z;</span>\n<span class=\"gd\">-        box.max.x = box.max.x - model.position.x - child.position.x;</span>\n<span class=\"gd\">-        box.max.y = box.max.y - model.position.y - child.position.y;</span>\n<span class=\"gd\">-        box.max.z = box.max.z - model.position.z - child.position.z;</span>\n<span class=\"gi\">+        // w.r.t. child</span>\n<span class=\"gi\">+        var worldToLocal = new THREE.Matrix4();</span>\n<span class=\"gi\">+        worldToLocal.getInverse(child.matrixWorld);</span>\n<span class=\"gi\">+        box.applyMatrix4(worldToLocal);</span>\n\n<span class=\"gd\">-        points[0] = new THREE.Vector3(inertialPose.position.x, box.min.y,</span>\n<span class=\"gi\">+        // X</span>\n<span class=\"gi\">+        points[0] = new THREE.Vector3(box.min.x, inertialPose.position.y,</span>\n           inertialPose.position.z);\n<span class=\"gd\">-        points[1] = new THREE.Vector3(inertialPose.position.x, box.max.y,</span>\n<span class=\"gi\">+        points[1] = new THREE.Vector3(box.max.x, inertialPose.position.y,</span>\n           inertialPose.position.z);\n<span class=\"gd\">-        points[2] = new THREE.Vector3(box.min.x, inertialPose.position.y,</span>\n<span class=\"gi\">+        // Y</span>\n<span class=\"gi\">+        points[2] = new THREE.Vector3(inertialPose.position.x, box.min.y,</span>\n           inertialPose.position.z);\n<span class=\"gd\">-        points[3] = new THREE.Vector3(box.max.x, inertialPose.position.y,</span>\n<span class=\"gi\">+        points[3] = new THREE.Vector3(inertialPose.position.x, box.max.y,</span>\n           inertialPose.position.z);\n<span class=\"gi\">+        // Z</span>\n         points[4] = new THREE.Vector3(inertialPose.position.x,\n           inertialPose.position.y, box.min.z);\n         points[5] = new THREE.Vector3(inertialPose.position.x,\n<span class=\"gu\">@@ -2447,8 +2448,8 @@</span>\n         helperGeometry_3.vertices.push(points[4]);\n         helperGeometry_3.vertices.push(points[5]);\n\n<span class=\"gd\">-        var helperMaterial_1 = new THREE.LineBasicMaterial({color: 0x00ff00});</span>\n<span class=\"gd\">-        var helperMaterial_2 = new THREE.LineBasicMaterial({color: 0xff0000});</span>\n<span class=\"gi\">+        var helperMaterial_1 = new THREE.LineBasicMaterial({color: 0xff0000});</span>\n<span class=\"gi\">+        var helperMaterial_2 = new THREE.LineBasicMaterial({color: 0x00ff00});</span>\n         var helperMaterial_3 = new THREE.LineBasicMaterial({color: 0x0000ff});\n         line_1 = new THREE.Line(helperGeometry_1, helperMaterial_1,\n             THREE.LineSegments);\n</pre></div>\n\n\n<p><img alt=\"comrot.png\" src=\"data/bitbucket.org/repo/r77Gja/images/1552545840-comrot.png\" /></p>\n<p>But you can see that the lines are wrongly scaled, this is especially visible for Y. This is happening because the bounding box we get with <code>box.setFromObject</code> is aligned with the world, so we're getting the first, but we want the second:</p>\n<p><img alt=\"rotlink.png\" src=\"data/bitbucket.org/repo/r77Gja/images/4289207856-rotlink.png\" /></p>\n<p>I haven't gone through the API searching for a way of getting this, do you know how to?</p>", "type": "rendered"}, "created_on": "2017-11-02T16:21:59.464466+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {"to": null, "from": null, "outdated": true, "path": "gz3d/src/gzscene.js"}, "updated_on": "2017-11-02T16:21:59.468138+00:00", "type": "pullrequest_comment", "id": 48650960}