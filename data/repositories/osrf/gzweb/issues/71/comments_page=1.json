{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/osrf/gzweb/issues/71/comments/27526720.json"}, "html": {"href": "#!/osrf/gzweb/issues/71#comment-27526720"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gzweb/issues/71.json"}}, "type": "issue", "id": 71, "repository": {"links": {"self": {"href": "data/repositories/osrf/gzweb.json"}, "html": {"href": "#!/osrf/gzweb"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3e2fc3f2-dc25-453b-9792-943c743d9b40}ts=1609263"}}, "type": "repository", "name": "gzweb", "full_name": "osrf/gzweb", "uuid": "{3e2fc3f2-dc25-453b-9792-943c743d9b40}"}, "title": "Persistent gzserver connection on startup"}, "content": {"raw": "I guess we can work around this problem by adding a msg to the console -if gzweb couldn't connect to gzserver- asking the user if he would like to wait until the connection is established, or to proceed, we would add that at the beginning of  ws_server.js since the connection is established in the contractor of the GZNode addon.     \n\n```\n#!c++\n\nGZNode::GZNode()\n{\n  isGzServerConnected = false;\n  if (!gazebo::transport::init()) {\n    return;\n  }\n\n  isGzServerConnected = true;\n  gazebo::transport::run();\n\n  this->gzIface = new GazeboInterface();\n  this->gzIface->Init();\n  this->gzIface->RunThread();\n}; \n```\n What do you guys think? @hugomatic ", "markup": "markdown", "html": "<p>I guess we can work around this problem by adding a msg to the console -if gzweb couldn't connect to gzserver- asking the user if he would like to wait until the connection is established, or to proceed, we would add that at the beginning of  ws_server.js since the connection is established in the contractor of the GZNode addon.     </p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"n\">GZNode</span><span class=\"o\">::</span><span class=\"n\">GZNode</span><span class=\"p\">()</span>\n<span class=\"p\">{</span>\n  <span class=\"n\">isGzServerConnected</span> <span class=\"o\">=</span> <span class=\"nb\">false</span><span class=\"p\">;</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"o\">!</span><span class=\"n\">gazebo</span><span class=\"o\">::</span><span class=\"n\">transport</span><span class=\"o\">::</span><span class=\"n\">init</span><span class=\"p\">())</span> <span class=\"p\">{</span>\n    <span class=\"k\">return</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n\n  <span class=\"n\">isGzServerConnected</span> <span class=\"o\">=</span> <span class=\"nb\">true</span><span class=\"p\">;</span>\n  <span class=\"n\">gazebo</span><span class=\"o\">::</span><span class=\"n\">transport</span><span class=\"o\">::</span><span class=\"n\">run</span><span class=\"p\">();</span>\n\n  <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">gzIface</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">GazeboInterface</span><span class=\"p\">();</span>\n  <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">gzIface</span><span class=\"o\">-&gt;</span><span class=\"n\">Init</span><span class=\"p\">();</span>\n  <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">gzIface</span><span class=\"o\">-&gt;</span><span class=\"n\">RunThread</span><span class=\"p\">();</span>\n<span class=\"p\">};</span> \n</pre></div>\n\n\n<p>What do you guys think? @hugomatic </p>", "type": "rendered"}, "created_on": "2016-05-03T17:28:30.669437+00:00", "user": {"display_name": "Mohamd Ayman", "uuid": "{72e87935-5983-4f36-8505-0c88a6493930}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B72e87935-5983-4f36-8505-0c88a6493930%7D"}, "html": {"href": "https://bitbucket.org/%7B72e87935-5983-4f36-8505-0c88a6493930%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:53a1879d-b572-46c9-97d3-8fa52b2ff8a7/d5d765e0-f86b-4c0d-93ed-c67429f1f465/128"}}, "nickname": "Mohamd Ayman", "type": "user", "account_id": "557058:53a1879d-b572-46c9-97d3-8fa52b2ff8a7"}, "updated_on": null, "type": "issue_comment", "id": 27526720}, {"links": {"self": {"href": "data/repositories/osrf/gzweb/issues/71/comments/27534054.json"}, "html": {"href": "#!/osrf/gzweb/issues/71#comment-27534054"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gzweb/issues/71.json"}}, "type": "issue", "id": 71, "repository": {"links": {"self": {"href": "data/repositories/osrf/gzweb.json"}, "html": {"href": "#!/osrf/gzweb"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3e2fc3f2-dc25-453b-9792-943c743d9b40}ts=1609263"}}, "type": "repository", "name": "gzweb", "full_name": "osrf/gzweb", "uuid": "{3e2fc3f2-dc25-453b-9792-943c743d9b40}"}, "title": "Persistent gzserver connection on startup"}, "content": {"raw": "The console msg is a good idea, but I prefer a default wait in case connection is not established (as opposed to asking the user). This is because the gzweb tool is often launched from a web app, where there are no users to see the msg.\nI would hold on changes to GZNode for the moment, because Gazebojs should replace it soon.", "markup": "markdown", "html": "<p>The console msg is a good idea, but I prefer a default wait in case connection is not established (as opposed to asking the user). This is because the gzweb tool is often launched from a web app, where there are no users to see the msg.\nI would hold on changes to GZNode for the moment, because Gazebojs should replace it soon.</p>", "type": "rendered"}, "created_on": "2016-05-04T02:58:07.673175+00:00", "user": {"display_name": "Hugo Boyer", "uuid": "{3d87874e-7099-4981-b04f-57f0272faa7d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d87874e-7099-4981-b04f-57f0272faa7d%7D"}, "html": {"href": "https://bitbucket.org/%7B3d87874e-7099-4981-b04f-57f0272faa7d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/21198da8539b599e3633017f5f5f8150d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsHB-6.png"}}, "nickname": "hugomatic", "type": "user", "account_id": "557058:869c02bb-b246-4cdc-9db3-0064e8add185"}, "updated_on": null, "type": "issue_comment", "id": 27534054}, {"links": {"self": {"href": "data/repositories/osrf/gzweb/issues/71/comments/27536330.json"}, "html": {"href": "#!/osrf/gzweb/issues/71#comment-27536330"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gzweb/issues/71.json"}}, "type": "issue", "id": 71, "repository": {"links": {"self": {"href": "data/repositories/osrf/gzweb.json"}, "html": {"href": "#!/osrf/gzweb"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3e2fc3f2-dc25-453b-9792-943c743d9b40}ts=1609263"}}, "type": "repository", "name": "gzweb", "full_name": "osrf/gzweb", "uuid": "{3e2fc3f2-dc25-453b-9792-943c743d9b40}"}, "title": "Persistent gzserver connection on startup"}, "content": {"raw": "I see, so i'll hold the changes for now.", "markup": "markdown", "html": "<p>I see, so i'll hold the changes for now.</p>", "type": "rendered"}, "created_on": "2016-05-04T06:26:08.935050+00:00", "user": {"display_name": "Mohamd Ayman", "uuid": "{72e87935-5983-4f36-8505-0c88a6493930}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B72e87935-5983-4f36-8505-0c88a6493930%7D"}, "html": {"href": "https://bitbucket.org/%7B72e87935-5983-4f36-8505-0c88a6493930%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:53a1879d-b572-46c9-97d3-8fa52b2ff8a7/d5d765e0-f86b-4c0d-93ed-c67429f1f465/128"}}, "nickname": "Mohamd Ayman", "type": "user", "account_id": "557058:53a1879d-b572-46c9-97d3-8fa52b2ff8a7"}, "updated_on": null, "type": "issue_comment", "id": 27536330}], "page": 1, "size": 3}