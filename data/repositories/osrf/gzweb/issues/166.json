{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/gzweb.json"}, "html": {"href": "#!/osrf/gzweb"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3e2fc3f2-dc25-453b-9792-943c743d9b40}ts=1609263"}}, "type": "repository", "name": "gzweb", "full_name": "osrf/gzweb", "uuid": "{3e2fc3f2-dc25-453b-9792-943c743d9b40}"}, "links": {"attachments": {"href": "data/repositories/osrf/gzweb/issues/166/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/gzweb/issues/166.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gzweb/issues/166/watch"}, "comments": {"href": "data/repositories/osrf/gzweb/issues/166/comments_page=1.json"}, "html": {"href": "#!/osrf/gzweb/issues/166/gzsdfparserjs-parse-white-space"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/gzweb/issues/166/vote"}}, "reporter": {"display_name": "myungkeun Lee", "uuid": "{09d23b1a-5a89-430e-a6de-2f7b1afa8bc9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B09d23b1a-5a89-430e-a6de-2f7b1afa8bc9%7D"}, "html": {"href": "https://bitbucket.org/%7B09d23b1a-5a89-430e-a6de-2f7b1afa8bc9%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/c15f11047bb98b3e2bcdb4bc87822f1dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsML-5.png"}}, "nickname": "myungkeun Lee", "type": "user", "account_id": "5d5dec2088d5680d3709a77c"}, "title": "@gzsdfparser.js parse white space incorrectly", "component": null, "votes": 0, "watches": 1, "content": {"raw": "A Model who has box geometry link does not spawned, when <size> tag\u2019s value in <box> geometry has white space at the front.\r\n\r\nExample\r\n\r\n```xml\r\n<?xml version=\"1.0\" ?>\r\n<sdf version=\"1.4\">\r\n    <model name='a_model'>\r\n        <link name='box_shape_linnk'>\r\n            <pose> 0 0 0 0 0 0 </pose>\r\n            <collision name='col_box'>\r\n                <geometry>\r\n                    <box>\r\n                        <size> 1 1 1 </size>\r\n                    </box>\r\n                </geometry>\r\n            </collision>\r\n            <visual name='vis_box'>\r\n                <geometry>\r\n                    <box>\r\n                        <size> 1 1 1 </size> <!-- size value has whitespace at the front-->\r\n                    </box>\r\n                </geometry>\r\n            </visual>\r\n        </link>\r\n    </model>\r\n</sdf>\r\n```\r\n\r\nBecause before parse the value of <size> tag, value string is splited to \\[\u201c \u201c, size\\_x,  size\\_y, size\\_z, \u201c \u201c\\] when value string contain white space at front.\r\n\r\nIt occurs when parseSize function split \u2018sizeStr\u2019 with \u2018\\\\s\\+\u2019regex.\r\n\r\nSo when trim\\(\\) was added to remove the space, it was confirmed that the model with the box size containing front of white space could be spawned\r\n\r\n```javascript\r\n---  var values = sizeStr.split(/\\s+/); \r\n+++  var values = sizeStr.trim().split(/\\s+/);  \r\n```", "markup": "markdown", "html": "<p>A Model who has box geometry link does not spawned, when &lt;size&gt; tag\u2019s value in &lt;box&gt; geometry has white space at the front.</p>\n<p>Example</p>\n<div class=\"codehilite language-xml\"><pre><span></span><span class=\"cp\">&lt;?xml version=&quot;1.0&quot; ?&gt;</span>\n<span class=\"nt\">&lt;sdf</span> <span class=\"na\">version=</span><span class=\"s\">&quot;1.4&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;model</span> <span class=\"na\">name=</span><span class=\"s\">&#39;a_model&#39;</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;link</span> <span class=\"na\">name=</span><span class=\"s\">&#39;box_shape_linnk&#39;</span><span class=\"nt\">&gt;</span>\n            <span class=\"nt\">&lt;pose&gt;</span> 0 0 0 0 0 0 <span class=\"nt\">&lt;/pose&gt;</span>\n            <span class=\"nt\">&lt;collision</span> <span class=\"na\">name=</span><span class=\"s\">&#39;col_box&#39;</span><span class=\"nt\">&gt;</span>\n                <span class=\"nt\">&lt;geometry&gt;</span>\n                    <span class=\"nt\">&lt;box&gt;</span>\n                        <span class=\"nt\">&lt;size&gt;</span> 1 1 1 <span class=\"nt\">&lt;/size&gt;</span>\n                    <span class=\"nt\">&lt;/box&gt;</span>\n                <span class=\"nt\">&lt;/geometry&gt;</span>\n            <span class=\"nt\">&lt;/collision&gt;</span>\n            <span class=\"nt\">&lt;visual</span> <span class=\"na\">name=</span><span class=\"s\">&#39;vis_box&#39;</span><span class=\"nt\">&gt;</span>\n                <span class=\"nt\">&lt;geometry&gt;</span>\n                    <span class=\"nt\">&lt;box&gt;</span>\n                        <span class=\"nt\">&lt;size&gt;</span> 1 1 1 <span class=\"nt\">&lt;/size&gt;</span> <span class=\"c\">&lt;!-- size value has whitespace at the front--&gt;</span>\n                    <span class=\"nt\">&lt;/box&gt;</span>\n                <span class=\"nt\">&lt;/geometry&gt;</span>\n            <span class=\"nt\">&lt;/visual&gt;</span>\n        <span class=\"nt\">&lt;/link&gt;</span>\n    <span class=\"nt\">&lt;/model&gt;</span>\n<span class=\"nt\">&lt;/sdf&gt;</span>\n</pre></div>\n\n\n<p>Because before parse the value of &lt;size&gt; tag, value string is splited to [\u201c \u201c, size_x,  size_y, size_z, \u201c \u201c] when value string contain white space at front.</p>\n<p>It occurs when parseSize function split \u2018sizeStr\u2019 with \u2018\\s+\u2019regex.</p>\n<p>So when trim() was added to remove the space, it was confirmed that the model with the box size containing front of white space could be spawned</p>\n<div class=\"codehilite language-javascript\"><pre><span></span><span class=\"o\">---</span>  <span class=\"kd\">var</span> <span class=\"nx\">values</span> <span class=\"o\">=</span> <span class=\"nx\">sizeStr</span><span class=\"p\">.</span><span class=\"nx\">split</span><span class=\"p\">(</span><span class=\"sr\">/\\s+/</span><span class=\"p\">);</span> \n<span class=\"o\">+++</span>  <span class=\"kd\">var</span> <span class=\"nx\">values</span> <span class=\"o\">=</span> <span class=\"nx\">sizeStr</span><span class=\"p\">.</span><span class=\"nx\">trim</span><span class=\"p\">().</span><span class=\"nx\">split</span><span class=\"p\">(</span><span class=\"sr\">/\\s+/</span><span class=\"p\">);</span>  \n</pre></div>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-08-22T02:22:14.676153+00:00", "milestone": null, "updated_on": "2019-08-22T02:51:10.558645+00:00", "type": "issue", "id": 166}