{"links": {"self": {"href": "data/repositories/osrf/gzweb/issues/107/comments/41090779.json"}, "html": {"href": "#!/osrf/gzweb/issues/107#comment-41090779"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gzweb/issues/107.json"}}, "type": "issue", "id": 107, "repository": {"links": {"self": {"href": "data/repositories/osrf/gzweb.json"}, "html": {"href": "#!/osrf/gzweb"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3e2fc3f2-dc25-453b-9792-943c743d9b40}ts=1609263"}}, "type": "repository", "name": "gzweb", "full_name": "osrf/gzweb", "uuid": "{3e2fc3f2-dc25-453b-9792-943c743d9b40}"}, "title": "Allow gzweb to work as a headless sdfParser [doesn't need a server]"}, "content": {"raw": "I was taking a look again at pull request #117, and I was thinking that the ideal demo would look something like this:\n\n~~~\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"path-to/sdfviewer.js\"></script>\n    <script src=\"path-to/app.js\"></script>\n  </head>\n \n  <body>\n    <div data-role=\"page\" data-theme=\"b\" data-content-theme=\"c\">\n\n      <h3> Browse model directory </h3>\n\n      <div id=\"model-loading\">\n        <input type=\"file\" id=\"file-input\" webkitdirectory=\"\" mozdirectory=\"\" directory=\"\"/>\n        <div id=\"list-of-files\">\n        </div>\n        <button id=\"view-model\">View model</button>\n      </div>\n\n      <div data-role=\"content\" id=\"gzweb-container\">\n      </div>\n\n    </div>\n  </body>\n</html>\n~~~\n\nThe main difference from the demo on that PR is that all the javascript needed by sdfviewer are contained within it.\n\nThe way a downstream project would use it is:\n\n* Copy `sdfviewer` to its own codebase\n* Within the app's javascript code, it may call the APIs provided by sdfviewer to:\n    * Create an empty scene\n    * Spawn models from SDF files or remote urls\n* Note that it shouldn't be the sdfviewer's responsibility to manage user events, the app will do that and forward calls to sdfviewer as needed\n\nWhat do you think?", "markup": "markdown", "html": "<p>I was taking a look again at <a href=\"#!/osrf/gzweb/pull-requests/117/gzweb-as-sdfparser\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #117</a>, and I was thinking that the ideal demo would look something like this:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"cp\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">html</span> <span class=\"na\">lang</span><span class=\"o\">=</span><span class=\"s\">&quot;en&quot;</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;</span><span class=\"nt\">head</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">script</span> <span class=\"na\">src</span><span class=\"o\">=</span><span class=\"s\">&quot;path-to/sdfviewer.js&quot;</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">script</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">script</span> <span class=\"na\">src</span><span class=\"o\">=</span><span class=\"s\">&quot;path-to/app.js&quot;</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">script</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;/</span><span class=\"nt\">head</span><span class=\"p\">&gt;</span>\n\n  <span class=\"p\">&lt;</span><span class=\"nt\">body</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">data-role</span><span class=\"o\">=</span><span class=\"s\">&quot;page&quot;</span> <span class=\"na\">data-theme</span><span class=\"o\">=</span><span class=\"s\">&quot;b&quot;</span> <span class=\"na\">data-content-theme</span><span class=\"o\">=</span><span class=\"s\">&quot;c&quot;</span><span class=\"p\">&gt;</span>\n\n      <span class=\"p\">&lt;</span><span class=\"nt\">h3</span><span class=\"p\">&gt;</span> Browse model directory <span class=\"p\">&lt;/</span><span class=\"nt\">h3</span><span class=\"p\">&gt;</span>\n\n      <span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">id</span><span class=\"o\">=</span><span class=\"s\">&quot;model-loading&quot;</span><span class=\"p\">&gt;</span>\n        <span class=\"p\">&lt;</span><span class=\"nt\">input</span> <span class=\"na\">type</span><span class=\"o\">=</span><span class=\"s\">&quot;file&quot;</span> <span class=\"na\">id</span><span class=\"o\">=</span><span class=\"s\">&quot;file-input&quot;</span> <span class=\"na\">webkitdirectory</span><span class=\"o\">=</span><span class=\"s\">&quot;&quot;</span> <span class=\"na\">mozdirectory</span><span class=\"o\">=</span><span class=\"s\">&quot;&quot;</span> <span class=\"na\">directory</span><span class=\"o\">=</span><span class=\"s\">&quot;&quot;</span><span class=\"p\">/&gt;</span>\n        <span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">id</span><span class=\"o\">=</span><span class=\"s\">&quot;list-of-files&quot;</span><span class=\"p\">&gt;</span>\n        <span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n        <span class=\"p\">&lt;</span><span class=\"nt\">button</span> <span class=\"na\">id</span><span class=\"o\">=</span><span class=\"s\">&quot;view-model&quot;</span><span class=\"p\">&gt;</span>View model<span class=\"p\">&lt;/</span><span class=\"nt\">button</span><span class=\"p\">&gt;</span>\n      <span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n\n      <span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">data-role</span><span class=\"o\">=</span><span class=\"s\">&quot;content&quot;</span> <span class=\"na\">id</span><span class=\"o\">=</span><span class=\"s\">&quot;gzweb-container&quot;</span><span class=\"p\">&gt;</span>\n      <span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n\n    <span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;/</span><span class=\"nt\">body</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">html</span><span class=\"p\">&gt;</span>\n</pre></div>\n\n\n<p>The main difference from the demo on that PR is that all the javascript needed by sdfviewer are contained within it.</p>\n<p>The way a downstream project would use it is:</p>\n<ul>\n<li>Copy <code>sdfviewer</code> to its own codebase</li>\n<li>Within the app's javascript code, it may call the APIs provided by sdfviewer to:<ul>\n<li>Create an empty scene</li>\n<li>Spawn models from SDF files or remote urls</li>\n</ul>\n</li>\n<li>Note that it shouldn't be the sdfviewer's responsibility to manage user events, the app will do that and forward calls to sdfviewer as needed</li>\n</ul>\n<p>What do you think?</p>", "type": "rendered"}, "created_on": "2017-11-08T19:00:26.627292+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": null, "type": "issue_comment", "id": 41090779}