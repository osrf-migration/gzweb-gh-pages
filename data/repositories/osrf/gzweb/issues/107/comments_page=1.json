{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/osrf/gzweb/issues/107/comments/39731341.json"}, "html": {"href": "#!/osrf/gzweb/issues/107#comment-39731341"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gzweb/issues/107.json"}}, "type": "issue", "id": 107, "repository": {"links": {"self": {"href": "data/repositories/osrf/gzweb.json"}, "html": {"href": "#!/osrf/gzweb"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3e2fc3f2-dc25-453b-9792-943c743d9b40}ts=1609263"}}, "type": "repository", "name": "gzweb", "full_name": "osrf/gzweb", "uuid": "{3e2fc3f2-dc25-453b-9792-943c743d9b40}"}, "title": "Allow gzweb to work as a headless sdfParser [doesn't need a server]"}, "content": {"raw": "```hg clone https://mohamd_ayman@bitbucket.org/mohamd_ayman/sdfviewer_draft```\n\n```npm install```\n\n```./start_sdfviewer_demo.sh```\n\nThis is a demo using the ```gz3d.js``` as it is and adding some functions to ```sdf_viewer.js```, I forgot the lights so I'll be working on them.\nJoints and the links are giving me the same problems the I had during the model spawning tests, It sure has sth to do with ```gzserver``` not being up, I'll be working on that too after I'm done with the lights.", "markup": "markdown", "html": "<p><code>hg clone https://mohamd_ayman@bitbucket.org/mohamd_ayman/sdfviewer_draft</code></p>\n<p><code>npm install</code></p>\n<p><code>./start_sdfviewer_demo.sh</code></p>\n<p>This is a demo using the <code>gz3d.js</code> as it is and adding some functions to <code>sdf_viewer.js</code>, I forgot the lights so I'll be working on them.\nJoints and the links are giving me the same problems the I had during the model spawning tests, It sure has sth to do with <code>gzserver</code> not being up, I'll be working on that too after I'm done with the lights.</p>", "type": "rendered"}, "created_on": "2017-09-08T20:15:11.400493+00:00", "user": {"display_name": "Mohamd Ayman", "uuid": "{72e87935-5983-4f36-8505-0c88a6493930}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B72e87935-5983-4f36-8505-0c88a6493930%7D"}, "html": {"href": "https://bitbucket.org/%7B72e87935-5983-4f36-8505-0c88a6493930%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:53a1879d-b572-46c9-97d3-8fa52b2ff8a7/d5d765e0-f86b-4c0d-93ed-c67429f1f465/128"}}, "nickname": "Mohamd Ayman", "type": "user", "account_id": "557058:53a1879d-b572-46c9-97d3-8fa52b2ff8a7"}, "updated_on": null, "type": "issue_comment", "id": 39731341}, {"links": {"self": {"href": "data/repositories/osrf/gzweb/issues/107/comments/39731372.json"}, "html": {"href": "#!/osrf/gzweb/issues/107#comment-39731372"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gzweb/issues/107.json"}}, "type": "issue", "id": 107, "repository": {"links": {"self": {"href": "data/repositories/osrf/gzweb.json"}, "html": {"href": "#!/osrf/gzweb"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3e2fc3f2-dc25-453b-9792-943c743d9b40}ts=1609263"}}, "type": "repository", "name": "gzweb", "full_name": "osrf/gzweb", "uuid": "{3e2fc3f2-dc25-453b-9792-943c743d9b40}"}, "title": "Allow gzweb to work as a headless sdfParser [doesn't need a server]"}, "content": {"raw": "To add a model, Have a look at ```index.html``` @Line 1205 \n\n```       // (Model name, materials path) ```\n\n  ```    scene.spawnModel.spawnFromSdf('house_2', 'assets'); ```", "markup": "markdown", "html": "<p>To add a model, Have a look at <code>index.html</code> @Line 1205 </p>\n<p><code>// (Model name, materials path)</code></p>\n<p><code>scene.spawnModel.spawnFromSdf('house_2', 'assets');</code></p>", "type": "rendered"}, "created_on": "2017-09-08T20:18:15.862449+00:00", "user": {"display_name": "Mohamd Ayman", "uuid": "{72e87935-5983-4f36-8505-0c88a6493930}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B72e87935-5983-4f36-8505-0c88a6493930%7D"}, "html": {"href": "https://bitbucket.org/%7B72e87935-5983-4f36-8505-0c88a6493930%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:53a1879d-b572-46c9-97d3-8fa52b2ff8a7/d5d765e0-f86b-4c0d-93ed-c67429f1f465/128"}}, "nickname": "Mohamd Ayman", "type": "user", "account_id": "557058:53a1879d-b572-46c9-97d3-8fa52b2ff8a7"}, "updated_on": null, "type": "issue_comment", "id": 39731372}, {"links": {"self": {"href": "data/repositories/osrf/gzweb/issues/107/comments/39731512.json"}, "html": {"href": "#!/osrf/gzweb/issues/107#comment-39731512"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gzweb/issues/107.json"}}, "type": "issue", "id": 107, "repository": {"links": {"self": {"href": "data/repositories/osrf/gzweb.json"}, "html": {"href": "#!/osrf/gzweb"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3e2fc3f2-dc25-453b-9792-943c743d9b40}ts=1609263"}}, "type": "repository", "name": "gzweb", "full_name": "osrf/gzweb", "uuid": "{3e2fc3f2-dc25-453b-9792-943c743d9b40}"}, "title": "Allow gzweb to work as a headless sdfParser [doesn't need a server]"}, "content": {"raw": "Looking good! Does the house material work for you? It looks white to me.\n\nWill it work if the functions on `sdf_viewer.js` are moved to `gz3d/src/gzspawnmodel.js` and we use your `index.html` directly with `gz3d.js` or are there other steps to take?", "markup": "markdown", "html": "<p>Looking good! Does the house material work for you? It looks white to me.</p>\n<p>Will it work if the functions on <code>sdf_viewer.js</code> are moved to <code>gz3d/src/gzspawnmodel.js</code> and we use your <code>index.html</code> directly with <code>gz3d.js</code> or are there other steps to take?</p>", "type": "rendered"}, "created_on": "2017-09-08T20:30:30.367509+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": null, "type": "issue_comment", "id": 39731512}, {"links": {"self": {"href": "data/repositories/osrf/gzweb/issues/107/comments/39734270.json"}, "html": {"href": "#!/osrf/gzweb/issues/107#comment-39734270"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gzweb/issues/107.json"}}, "type": "issue", "id": 107, "repository": {"links": {"self": {"href": "data/repositories/osrf/gzweb.json"}, "html": {"href": "#!/osrf/gzweb"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3e2fc3f2-dc25-453b-9792-943c743d9b40}ts=1609263"}}, "type": "repository", "name": "gzweb", "full_name": "osrf/gzweb", "uuid": "{3e2fc3f2-dc25-453b-9792-943c743d9b40}"}, "title": "Allow gzweb to work as a headless sdfParser [doesn't need a server]"}, "content": {"raw": "Yeah the materials looks white because the light is not yet done,\n\nI was thinking of adding another ```html``` file and to be like ```http/client/example_sdfViewer.html``` , We would then access it like ```localhost:8080/example_sdfViewer```, i'll try to move the js file to the src too", "markup": "markdown", "html": "<p>Yeah the materials looks white because the light is not yet done,</p>\n<p>I was thinking of adding another <code>html</code> file and to be like <code>http/client/example_sdfViewer.html</code> , We would then access it like <code>localhost:8080/example_sdfViewer</code>, i'll try to move the js file to the src too</p>", "type": "rendered"}, "created_on": "2017-09-09T06:07:08.130679+00:00", "user": {"display_name": "Mohamd Ayman", "uuid": "{72e87935-5983-4f36-8505-0c88a6493930}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B72e87935-5983-4f36-8505-0c88a6493930%7D"}, "html": {"href": "https://bitbucket.org/%7B72e87935-5983-4f36-8505-0c88a6493930%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:53a1879d-b572-46c9-97d3-8fa52b2ff8a7/d5d765e0-f86b-4c0d-93ed-c67429f1f465/128"}}, "nickname": "Mohamd Ayman", "type": "user", "account_id": "557058:53a1879d-b572-46c9-97d3-8fa52b2ff8a7"}, "updated_on": null, "type": "issue_comment", "id": 39734270}, {"links": {"self": {"href": "data/repositories/osrf/gzweb/issues/107/comments/39747127.json"}, "html": {"href": "#!/osrf/gzweb/issues/107#comment-39747127"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gzweb/issues/107.json"}}, "type": "issue", "id": 107, "repository": {"links": {"self": {"href": "data/repositories/osrf/gzweb.json"}, "html": {"href": "#!/osrf/gzweb"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3e2fc3f2-dc25-453b-9792-943c743d9b40}ts=1609263"}}, "type": "repository", "name": "gzweb", "full_name": "osrf/gzweb", "uuid": "{3e2fc3f2-dc25-453b-9792-943c743d9b40}"}, "title": "Allow gzweb to work as a headless sdfParser [doesn't need a server]"}, "content": {"raw": "mb the light was Ok, that was the materials.", "markup": "markdown", "html": "<p>mb the light was Ok, that was the materials.</p>", "type": "rendered"}, "created_on": "2017-09-09T12:52:10.898658+00:00", "user": {"display_name": "Mohamd Ayman", "uuid": "{72e87935-5983-4f36-8505-0c88a6493930}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B72e87935-5983-4f36-8505-0c88a6493930%7D"}, "html": {"href": "https://bitbucket.org/%7B72e87935-5983-4f36-8505-0c88a6493930%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:53a1879d-b572-46c9-97d3-8fa52b2ff8a7/d5d765e0-f86b-4c0d-93ed-c67429f1f465/128"}}, "nickname": "Mohamd Ayman", "type": "user", "account_id": "557058:53a1879d-b572-46c9-97d3-8fa52b2ff8a7"}, "updated_on": null, "type": "issue_comment", "id": 39747127}, {"links": {"self": {"href": "data/repositories/osrf/gzweb/issues/107/comments/39748934.json"}, "html": {"href": "#!/osrf/gzweb/issues/107#comment-39748934"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gzweb/issues/107.json"}}, "type": "issue", "id": 107, "repository": {"links": {"self": {"href": "data/repositories/osrf/gzweb.json"}, "html": {"href": "#!/osrf/gzweb"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3e2fc3f2-dc25-453b-9792-943c743d9b40}ts=1609263"}}, "type": "repository", "name": "gzweb", "full_name": "osrf/gzweb", "uuid": "{3e2fc3f2-dc25-453b-9792-943c743d9b40}"}, "title": "Allow gzweb to work as a headless sdfParser [doesn't need a server]"}, "content": {"raw": "Having an example html file sounds like a good idea.\n\nHere are some features I think should be in simulation, but not on the SDF viewer:\n\n* All the menus, including the left panel and the top menu\n* Manipulation modes (since the viewer will view one model at a time, orbiting the scene is enough to inspect the model from all angles)\n* For the radial menu, only view transparent, view wireframe and view joints should stay, delete, translate and rotate should be gone. The same for the context menu.\n* Websocket interface (it should be possible to just open the html file like `firefox sdf_viewer.sdf`, without serving)", "markup": "markdown", "html": "<p>Having an example html file sounds like a good idea.</p>\n<p>Here are some features I think should be in simulation, but not on the SDF viewer:</p>\n<ul>\n<li>All the menus, including the left panel and the top menu</li>\n<li>Manipulation modes (since the viewer will view one model at a time, orbiting the scene is enough to inspect the model from all angles)</li>\n<li>For the radial menu, only view transparent, view wireframe and view joints should stay, delete, translate and rotate should be gone. The same for the context menu.</li>\n<li>Websocket interface (it should be possible to just open the html file like <code>firefox sdf_viewer.sdf</code>, without serving)</li>\n</ul>", "type": "rendered"}, "created_on": "2017-09-09T16:37:40.203055+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": null, "type": "issue_comment", "id": 39748934}, {"links": {"self": {"href": "data/repositories/osrf/gzweb/issues/107/comments/39750073.json"}, "html": {"href": "#!/osrf/gzweb/issues/107#comment-39750073"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gzweb/issues/107.json"}}, "type": "issue", "id": 107, "repository": {"links": {"self": {"href": "data/repositories/osrf/gzweb.json"}, "html": {"href": "#!/osrf/gzweb"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3e2fc3f2-dc25-453b-9792-943c743d9b40}ts=1609263"}}, "type": "repository", "name": "gzweb", "full_name": "osrf/gzweb", "uuid": "{3e2fc3f2-dc25-453b-9792-943c743d9b40}"}, "title": "Allow gzweb to work as a headless sdfParser [doesn't need a server]"}, "content": {"raw": "To run start gzweb normally, without gzserver and navigate to ```http://localhost:8080/sdfViewerExample```\n\n[Here is the branch](https://bitbucket.org/mohamd_ayman/gzweb/branch/gzweb_as_sdfparser) that I'm working on, I've got the materials working and and adjusted ```Grunt``` and the ```cmake``` scripts.\n\nI've tried the viewer without the manipulation modes, I think the manipulation modes might be useful, well for me orbiting the scene was not that smooth, I liked rotating the model more.\n\nThe ```sdfviewergui.js``` still has a lot of useless code, I'm currently removing those. \n\nI'll be looking into the Websocket interface.", "markup": "markdown", "html": "<p>To run start gzweb normally, without gzserver and navigate to <code>http://localhost:8080/sdfViewerExample</code></p>\n<p><a data-is-external-link=\"true\" href=\"https://bitbucket.org/mohamd_ayman/gzweb/branch/gzweb_as_sdfparser\" rel=\"nofollow\">Here is the branch</a> that I'm working on, I've got the materials working and and adjusted <code>Grunt</code> and the <code>cmake</code> scripts.</p>\n<p>I've tried the viewer without the manipulation modes, I think the manipulation modes might be useful, well for me orbiting the scene was not that smooth, I liked rotating the model more.</p>\n<p>The <code>sdfviewergui.js</code> still has a lot of useless code, I'm currently removing those. </p>\n<p>I'll be looking into the Websocket interface.</p>", "type": "rendered"}, "created_on": "2017-09-09T18:53:38.485799+00:00", "user": {"display_name": "Mohamd Ayman", "uuid": "{72e87935-5983-4f36-8505-0c88a6493930}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B72e87935-5983-4f36-8505-0c88a6493930%7D"}, "html": {"href": "https://bitbucket.org/%7B72e87935-5983-4f36-8505-0c88a6493930%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:53a1879d-b572-46c9-97d3-8fa52b2ff8a7/d5d765e0-f86b-4c0d-93ed-c67429f1f465/128"}}, "nickname": "Mohamd Ayman", "type": "user", "account_id": "557058:53a1879d-b572-46c9-97d3-8fa52b2ff8a7"}, "updated_on": "2017-09-09T19:06:48.370875+00:00", "type": "issue_comment", "id": 39750073}, {"links": {"self": {"href": "data/repositories/osrf/gzweb/issues/107/comments/39750209.json"}, "html": {"href": "#!/osrf/gzweb/issues/107#comment-39750209"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gzweb/issues/107.json"}}, "type": "issue", "id": 107, "repository": {"links": {"self": {"href": "data/repositories/osrf/gzweb.json"}, "html": {"href": "#!/osrf/gzweb"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3e2fc3f2-dc25-453b-9792-943c743d9b40}ts=1609263"}}, "type": "repository", "name": "gzweb", "full_name": "osrf/gzweb", "uuid": "{3e2fc3f2-dc25-453b-9792-943c743d9b40}"}, "title": "Allow gzweb to work as a headless sdfParser [doesn't need a server]"}, "content": {"raw": "Oh sorry, when I mentioned the server I was referring to the `http-server`, not `gzserver`. On your example, the `start_sdfviewer_demo.sh` script is starting an `http-server`, but I think that an SDF viewer which can be embedded into other pages shouldn't need such a server, just navigating to the html file should work. *I think*", "markup": "markdown", "html": "<p>Oh sorry, when I mentioned the server I was referring to the <code>http-server</code>, not <code>gzserver</code>. On your example, the <code>start_sdfviewer_demo.sh</code> script is starting an <code>http-server</code>, but I think that an SDF viewer which can be embedded into other pages shouldn't need such a server, just navigating to the html file should work. <em>I think</em></p>", "type": "rendered"}, "created_on": "2017-09-09T19:14:36.496284+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": null, "type": "issue_comment", "id": 39750209}, {"links": {"self": {"href": "data/repositories/osrf/gzweb/issues/107/comments/39750266.json"}, "html": {"href": "#!/osrf/gzweb/issues/107#comment-39750266"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gzweb/issues/107.json"}}, "type": "issue", "id": 107, "repository": {"links": {"self": {"href": "data/repositories/osrf/gzweb.json"}, "html": {"href": "#!/osrf/gzweb"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3e2fc3f2-dc25-453b-9792-943c743d9b40}ts=1609263"}}, "type": "repository", "name": "gzweb", "full_name": "osrf/gzweb", "uuid": "{3e2fc3f2-dc25-453b-9792-943c743d9b40}"}, "title": "Allow gzweb to work as a headless sdfParser [doesn't need a server]"}, "content": {"raw": "And right now we can ``` firefox sdfViewerExample.html ``` , that is what you meant, right?", "markup": "markdown", "html": "<p>And right now we can <code>firefox sdfViewerExample.html</code> , that is what you meant, right?</p>", "type": "rendered"}, "created_on": "2017-09-09T19:19:00.172874+00:00", "user": {"display_name": "Mohamd Ayman", "uuid": "{72e87935-5983-4f36-8505-0c88a6493930}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B72e87935-5983-4f36-8505-0c88a6493930%7D"}, "html": {"href": "https://bitbucket.org/%7B72e87935-5983-4f36-8505-0c88a6493930%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:53a1879d-b572-46c9-97d3-8fa52b2ff8a7/d5d765e0-f86b-4c0d-93ed-c67429f1f465/128"}}, "nickname": "Mohamd Ayman", "type": "user", "account_id": "557058:53a1879d-b572-46c9-97d3-8fa52b2ff8a7"}, "updated_on": null, "type": "issue_comment", "id": 39750266}, {"links": {"self": {"href": "data/repositories/osrf/gzweb/issues/107/comments/39750297.json"}, "html": {"href": "#!/osrf/gzweb/issues/107#comment-39750297"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gzweb/issues/107.json"}}, "type": "issue", "id": 107, "repository": {"links": {"self": {"href": "data/repositories/osrf/gzweb.json"}, "html": {"href": "#!/osrf/gzweb"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3e2fc3f2-dc25-453b-9792-943c743d9b40}ts=1609263"}}, "type": "repository", "name": "gzweb", "full_name": "osrf/gzweb", "uuid": "{3e2fc3f2-dc25-453b-9792-943c743d9b40}"}, "title": "Allow gzweb to work as a headless sdfParser [doesn't need a server]"}, "content": {"raw": "Yeah we totally needn't an httpserver, just the html file in the browser does work.\n\nIt doesn't work with chrome though because of ```CORS ``` ``` Cross origin requests are only supported for protocol schemes: http, data, chrome, chrome-extension, https. ```", "markup": "markdown", "html": "<p>Yeah we totally needn't an httpserver, just the html file in the browser does work.</p>\n<p>It doesn't work with chrome though because of <code>CORS</code> <code>Cross origin requests are only supported for protocol schemes: http, data, chrome, chrome-extension, https.</code></p>", "type": "rendered"}, "created_on": "2017-09-09T19:22:02.995713+00:00", "user": {"display_name": "Mohamd Ayman", "uuid": "{72e87935-5983-4f36-8505-0c88a6493930}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B72e87935-5983-4f36-8505-0c88a6493930%7D"}, "html": {"href": "https://bitbucket.org/%7B72e87935-5983-4f36-8505-0c88a6493930%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:53a1879d-b572-46c9-97d3-8fa52b2ff8a7/d5d765e0-f86b-4c0d-93ed-c67429f1f465/128"}}, "nickname": "Mohamd Ayman", "type": "user", "account_id": "557058:53a1879d-b572-46c9-97d3-8fa52b2ff8a7"}, "updated_on": null, "type": "issue_comment", "id": 39750297}, {"links": {"self": {"href": "data/repositories/osrf/gzweb/issues/107/comments/39791678.json"}, "html": {"href": "#!/osrf/gzweb/issues/107#comment-39791678"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gzweb/issues/107.json"}}, "type": "issue", "id": 107, "repository": {"links": {"self": {"href": "data/repositories/osrf/gzweb.json"}, "html": {"href": "#!/osrf/gzweb"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3e2fc3f2-dc25-453b-9792-943c743d9b40}ts=1609263"}}, "type": "repository", "name": "gzweb", "full_name": "osrf/gzweb", "uuid": "{3e2fc3f2-dc25-453b-9792-943c743d9b40}"}, "title": "Allow gzweb to work as a headless sdfParser [doesn't need a server]"}, "content": {"raw": "I fell like that the way I'm including the materials right now doesn't look too good, I'm making to make it better.\n\nI'm trying to add joints to the model, since it turned out model joints are only added to the model when gzweb receives a ```model/info``` message.", "markup": "markdown", "html": "<p>I fell like that the way I'm including the materials right now doesn't look too good, I'm making to make it better.</p>\n<p>I'm trying to add joints to the model, since it turned out model joints are only added to the model when gzweb receives a <code>model/info</code> message.</p>", "type": "rendered"}, "created_on": "2017-09-12T06:38:59.590774+00:00", "user": {"display_name": "Mohamd Ayman", "uuid": "{72e87935-5983-4f36-8505-0c88a6493930}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B72e87935-5983-4f36-8505-0c88a6493930%7D"}, "html": {"href": "https://bitbucket.org/%7B72e87935-5983-4f36-8505-0c88a6493930%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:53a1879d-b572-46c9-97d3-8fa52b2ff8a7/d5d765e0-f86b-4c0d-93ed-c67429f1f465/128"}}, "nickname": "Mohamd Ayman", "type": "user", "account_id": "557058:53a1879d-b572-46c9-97d3-8fa52b2ff8a7"}, "updated_on": null, "type": "issue_comment", "id": 39791678}, {"links": {"self": {"href": "data/repositories/osrf/gzweb/issues/107/comments/39804967.json"}, "html": {"href": "#!/osrf/gzweb/issues/107#comment-39804967"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gzweb/issues/107.json"}}, "type": "issue", "id": 107, "repository": {"links": {"self": {"href": "data/repositories/osrf/gzweb.json"}, "html": {"href": "#!/osrf/gzweb"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3e2fc3f2-dc25-453b-9792-943c743d9b40}ts=1609263"}}, "type": "repository", "name": "gzweb", "full_name": "osrf/gzweb", "uuid": "{3e2fc3f2-dc25-453b-9792-943c743d9b40}"}, "title": "Allow gzweb to work as a headless sdfParser [doesn't need a server]"}, "content": {"raw": "We're assuming the files come from the client's computer, right? Or from a web server? In case it's from the client, maybe all the files, including materials and all, need to be passed one by one?", "markup": "markdown", "html": "<p>We're assuming the files come from the client's computer, right? Or from a web server? In case it's from the client, maybe all the files, including materials and all, need to be passed one by one?</p>", "type": "rendered"}, "created_on": "2017-09-12T14:56:05.145010+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": null, "type": "issue_comment", "id": 39804967}, {"links": {"self": {"href": "data/repositories/osrf/gzweb/issues/107/comments/39805721.json"}, "html": {"href": "#!/osrf/gzweb/issues/107#comment-39805721"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gzweb/issues/107.json"}}, "type": "issue", "id": 107, "repository": {"links": {"self": {"href": "data/repositories/osrf/gzweb.json"}, "html": {"href": "#!/osrf/gzweb"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3e2fc3f2-dc25-453b-9792-943c743d9b40}ts=1609263"}}, "type": "repository", "name": "gzweb", "full_name": "osrf/gzweb", "uuid": "{3e2fc3f2-dc25-453b-9792-943c743d9b40}"}, "title": "Allow gzweb to work as a headless sdfParser [doesn't need a server]"}, "content": {"raw": "We will be passing the materials and sdf files right.\n\nUpdate about the materials, well right now gzweb has no means of parsing materials, it is either gzbridge that does that or a material message from gzserver.\n\nI think the options that we have right now are\n\n*   building  a ```js``` material parser.\n*   using gzbridge material parser as a tool to parses the materials before they are served to the sdfviewer. -like a preprocessing step for the materials-\n\nWhat do you think? do you have other ideas?", "markup": "markdown", "html": "<p>We will be passing the materials and sdf files right.</p>\n<p>Update about the materials, well right now gzweb has no means of parsing materials, it is either gzbridge that does that or a material message from gzserver.</p>\n<p>I think the options that we have right now are</p>\n<ul>\n<li>building  a <code>js</code> material parser.</li>\n<li>using gzbridge material parser as a tool to parses the materials before they are served to the sdfviewer. -like a preprocessing step for the materials-</li>\n</ul>\n<p>What do you think? do you have other ideas?</p>", "type": "rendered"}, "created_on": "2017-09-12T15:23:47.903707+00:00", "user": {"display_name": "Mohamd Ayman", "uuid": "{72e87935-5983-4f36-8505-0c88a6493930}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B72e87935-5983-4f36-8505-0c88a6493930%7D"}, "html": {"href": "https://bitbucket.org/%7B72e87935-5983-4f36-8505-0c88a6493930%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:53a1879d-b572-46c9-97d3-8fa52b2ff8a7/d5d765e0-f86b-4c0d-93ed-c67429f1f465/128"}}, "nickname": "Mohamd Ayman", "type": "user", "account_id": "557058:53a1879d-b572-46c9-97d3-8fa52b2ff8a7"}, "updated_on": null, "type": "issue_comment", "id": 39805721}, {"links": {"self": {"href": "data/repositories/osrf/gzweb/issues/107/comments/39806216.json"}, "html": {"href": "#!/osrf/gzweb/issues/107#comment-39806216"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gzweb/issues/107.json"}}, "type": "issue", "id": 107, "repository": {"links": {"self": {"href": "data/repositories/osrf/gzweb.json"}, "html": {"href": "#!/osrf/gzweb"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3e2fc3f2-dc25-453b-9792-943c743d9b40}ts=1609263"}}, "type": "repository", "name": "gzweb", "full_name": "osrf/gzweb", "uuid": "{3e2fc3f2-dc25-453b-9792-943c743d9b40}"}, "title": "Allow gzweb to work as a headless sdfParser [doesn't need a server]"}, "content": {"raw": "Oh I see. I think eventually we will need a solution which works fully on the browser, so the `js` option sounds best. But I'd say we can leave this as an open issue and focus on getting a minimum viable product working first. That could be a parser which doesn't handle materials or generates joints for now.", "markup": "markdown", "html": "<p>Oh I see. I think eventually we will need a solution which works fully on the browser, so the <code>js</code> option sounds best. But I'd say we can leave this as an open issue and focus on getting a minimum viable product working first. That could be a parser which doesn't handle materials or generates joints for now.</p>", "type": "rendered"}, "created_on": "2017-09-12T15:44:55.685813+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": null, "type": "issue_comment", "id": 39806216}, {"links": {"self": {"href": "data/repositories/osrf/gzweb/issues/107/comments/39806375.json"}, "html": {"href": "#!/osrf/gzweb/issues/107#comment-39806375"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gzweb/issues/107.json"}}, "type": "issue", "id": 107, "repository": {"links": {"self": {"href": "data/repositories/osrf/gzweb.json"}, "html": {"href": "#!/osrf/gzweb"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3e2fc3f2-dc25-453b-9792-943c743d9b40}ts=1609263"}}, "type": "repository", "name": "gzweb", "full_name": "osrf/gzweb", "uuid": "{3e2fc3f2-dc25-453b-9792-943c743d9b40}"}, "title": "Allow gzweb to work as a headless sdfParser [doesn't need a server]"}, "content": {"raw": "Cool,  I'll clean the code and open a PR.", "markup": "markdown", "html": "<p>Cool,  I'll clean the code and open a PR.</p>", "type": "rendered"}, "created_on": "2017-09-12T15:52:09.693058+00:00", "user": {"display_name": "Mohamd Ayman", "uuid": "{72e87935-5983-4f36-8505-0c88a6493930}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B72e87935-5983-4f36-8505-0c88a6493930%7D"}, "html": {"href": "https://bitbucket.org/%7B72e87935-5983-4f36-8505-0c88a6493930%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:53a1879d-b572-46c9-97d3-8fa52b2ff8a7/d5d765e0-f86b-4c0d-93ed-c67429f1f465/128"}}, "nickname": "Mohamd Ayman", "type": "user", "account_id": "557058:53a1879d-b572-46c9-97d3-8fa52b2ff8a7"}, "updated_on": null, "type": "issue_comment", "id": 39806375}, {"links": {"self": {"href": "data/repositories/osrf/gzweb/issues/107/comments/39810792.json"}, "html": {"href": "#!/osrf/gzweb/issues/107#comment-39810792"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gzweb/issues/107.json"}}, "type": "issue", "id": 107, "repository": {"links": {"self": {"href": "data/repositories/osrf/gzweb.json"}, "html": {"href": "#!/osrf/gzweb"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3e2fc3f2-dc25-453b-9792-943c743d9b40}ts=1609263"}}, "type": "repository", "name": "gzweb", "full_name": "osrf/gzweb", "uuid": "{3e2fc3f2-dc25-453b-9792-943c743d9b40}"}, "title": "Allow gzweb to work as a headless sdfParser [doesn't need a server]"}, "content": {"raw": "See pull request #117", "markup": "markdown", "html": "<p>See <a href=\"#!/osrf/gzweb/pull-requests/117/gzweb-as-sdfparser\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #117</a></p>", "type": "rendered"}, "created_on": "2017-09-12T20:33:01.503308+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": null, "type": "issue_comment", "id": 39810792}, {"links": {"self": {"href": "data/repositories/osrf/gzweb/issues/107/comments/41090779.json"}, "html": {"href": "#!/osrf/gzweb/issues/107#comment-41090779"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gzweb/issues/107.json"}}, "type": "issue", "id": 107, "repository": {"links": {"self": {"href": "data/repositories/osrf/gzweb.json"}, "html": {"href": "#!/osrf/gzweb"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3e2fc3f2-dc25-453b-9792-943c743d9b40}ts=1609263"}}, "type": "repository", "name": "gzweb", "full_name": "osrf/gzweb", "uuid": "{3e2fc3f2-dc25-453b-9792-943c743d9b40}"}, "title": "Allow gzweb to work as a headless sdfParser [doesn't need a server]"}, "content": {"raw": "I was taking a look again at pull request #117, and I was thinking that the ideal demo would look something like this:\n\n~~~\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"path-to/sdfviewer.js\"></script>\n    <script src=\"path-to/app.js\"></script>\n  </head>\n \n  <body>\n    <div data-role=\"page\" data-theme=\"b\" data-content-theme=\"c\">\n\n      <h3> Browse model directory </h3>\n\n      <div id=\"model-loading\">\n        <input type=\"file\" id=\"file-input\" webkitdirectory=\"\" mozdirectory=\"\" directory=\"\"/>\n        <div id=\"list-of-files\">\n        </div>\n        <button id=\"view-model\">View model</button>\n      </div>\n\n      <div data-role=\"content\" id=\"gzweb-container\">\n      </div>\n\n    </div>\n  </body>\n</html>\n~~~\n\nThe main difference from the demo on that PR is that all the javascript needed by sdfviewer are contained within it.\n\nThe way a downstream project would use it is:\n\n* Copy `sdfviewer` to its own codebase\n* Within the app's javascript code, it may call the APIs provided by sdfviewer to:\n    * Create an empty scene\n    * Spawn models from SDF files or remote urls\n* Note that it shouldn't be the sdfviewer's responsibility to manage user events, the app will do that and forward calls to sdfviewer as needed\n\nWhat do you think?", "markup": "markdown", "html": "<p>I was taking a look again at <a href=\"#!/osrf/gzweb/pull-requests/117/gzweb-as-sdfparser\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #117</a>, and I was thinking that the ideal demo would look something like this:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"cp\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">html</span> <span class=\"na\">lang</span><span class=\"o\">=</span><span class=\"s\">&quot;en&quot;</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;</span><span class=\"nt\">head</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">script</span> <span class=\"na\">src</span><span class=\"o\">=</span><span class=\"s\">&quot;path-to/sdfviewer.js&quot;</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">script</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">script</span> <span class=\"na\">src</span><span class=\"o\">=</span><span class=\"s\">&quot;path-to/app.js&quot;</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">script</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;/</span><span class=\"nt\">head</span><span class=\"p\">&gt;</span>\n\n  <span class=\"p\">&lt;</span><span class=\"nt\">body</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">data-role</span><span class=\"o\">=</span><span class=\"s\">&quot;page&quot;</span> <span class=\"na\">data-theme</span><span class=\"o\">=</span><span class=\"s\">&quot;b&quot;</span> <span class=\"na\">data-content-theme</span><span class=\"o\">=</span><span class=\"s\">&quot;c&quot;</span><span class=\"p\">&gt;</span>\n\n      <span class=\"p\">&lt;</span><span class=\"nt\">h3</span><span class=\"p\">&gt;</span> Browse model directory <span class=\"p\">&lt;/</span><span class=\"nt\">h3</span><span class=\"p\">&gt;</span>\n\n      <span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">id</span><span class=\"o\">=</span><span class=\"s\">&quot;model-loading&quot;</span><span class=\"p\">&gt;</span>\n        <span class=\"p\">&lt;</span><span class=\"nt\">input</span> <span class=\"na\">type</span><span class=\"o\">=</span><span class=\"s\">&quot;file&quot;</span> <span class=\"na\">id</span><span class=\"o\">=</span><span class=\"s\">&quot;file-input&quot;</span> <span class=\"na\">webkitdirectory</span><span class=\"o\">=</span><span class=\"s\">&quot;&quot;</span> <span class=\"na\">mozdirectory</span><span class=\"o\">=</span><span class=\"s\">&quot;&quot;</span> <span class=\"na\">directory</span><span class=\"o\">=</span><span class=\"s\">&quot;&quot;</span><span class=\"p\">/&gt;</span>\n        <span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">id</span><span class=\"o\">=</span><span class=\"s\">&quot;list-of-files&quot;</span><span class=\"p\">&gt;</span>\n        <span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n        <span class=\"p\">&lt;</span><span class=\"nt\">button</span> <span class=\"na\">id</span><span class=\"o\">=</span><span class=\"s\">&quot;view-model&quot;</span><span class=\"p\">&gt;</span>View model<span class=\"p\">&lt;/</span><span class=\"nt\">button</span><span class=\"p\">&gt;</span>\n      <span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n\n      <span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">data-role</span><span class=\"o\">=</span><span class=\"s\">&quot;content&quot;</span> <span class=\"na\">id</span><span class=\"o\">=</span><span class=\"s\">&quot;gzweb-container&quot;</span><span class=\"p\">&gt;</span>\n      <span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n\n    <span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;/</span><span class=\"nt\">body</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">html</span><span class=\"p\">&gt;</span>\n</pre></div>\n\n\n<p>The main difference from the demo on that PR is that all the javascript needed by sdfviewer are contained within it.</p>\n<p>The way a downstream project would use it is:</p>\n<ul>\n<li>Copy <code>sdfviewer</code> to its own codebase</li>\n<li>Within the app's javascript code, it may call the APIs provided by sdfviewer to:<ul>\n<li>Create an empty scene</li>\n<li>Spawn models from SDF files or remote urls</li>\n</ul>\n</li>\n<li>Note that it shouldn't be the sdfviewer's responsibility to manage user events, the app will do that and forward calls to sdfviewer as needed</li>\n</ul>\n<p>What do you think?</p>", "type": "rendered"}, "created_on": "2017-11-08T19:00:26.627292+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": null, "type": "issue_comment", "id": 41090779}, {"links": {"self": {"href": "data/repositories/osrf/gzweb/issues/107/comments/41326268.json"}, "html": {"href": "#!/osrf/gzweb/issues/107#comment-41326268"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gzweb/issues/107.json"}}, "type": "issue", "id": 107, "repository": {"links": {"self": {"href": "data/repositories/osrf/gzweb.json"}, "html": {"href": "#!/osrf/gzweb"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3e2fc3f2-dc25-453b-9792-943c743d9b40}ts=1609263"}}, "type": "repository", "name": "gzweb", "full_name": "osrf/gzweb", "uuid": "{3e2fc3f2-dc25-453b-9792-943c743d9b40}"}, "title": "Allow gzweb to work as a headless sdfParser [doesn't need a server]"}, "content": {"raw": "See pull request #141", "markup": "markdown", "html": "<p>See <a href=\"#!/osrf/gzweb/pull-requests/141/reusable-gzweb\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #141</a></p>", "type": "rendered"}, "created_on": "2017-11-20T16:43:19.003139+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": null, "type": "issue_comment", "id": 41326268}, {"links": {"self": {"href": "data/repositories/osrf/gzweb/issues/107/comments/43126609.json"}, "html": {"href": "#!/osrf/gzweb/issues/107#comment-43126609"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gzweb/issues/107.json"}}, "type": "issue", "id": 107, "repository": {"links": {"self": {"href": "data/repositories/osrf/gzweb.json"}, "html": {"href": "#!/osrf/gzweb"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3e2fc3f2-dc25-453b-9792-943c743d9b40}ts=1609263"}}, "type": "repository", "name": "gzweb", "full_name": "osrf/gzweb", "uuid": "{3e2fc3f2-dc25-453b-9792-943c743d9b40}"}, "title": "Allow gzweb to work as a headless sdfParser [doesn't need a server]"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2018-02-06T16:52:38.813183+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": null, "type": "issue_comment", "id": 43126609}], "page": 1, "size": 19}