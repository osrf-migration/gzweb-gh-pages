{"changes": {"content": {"new": "A Model who has box geometry link does not spawned, when <size> tag\u2019s value in <box> geometry has white space at the front.\r\n\r\nExample\r\n\r\n```xml\r\n<?xml version=\"1.0\" ?>\r\n<sdf version=\"1.4\">\r\n    <model name='a_model'>\r\n        <link name='box_shape_linnk'>\r\n            <pose> 0 0 0 0 0 0 </pose>\r\n            <collision name='col_box'>\r\n                <geometry>\r\n                    <box>\r\n                        <size> 1 1 1 </size>\r\n                    </box>\r\n                </geometry>\r\n            </collision>\r\n            <visual name='vis_box'>\r\n                <geometry>\r\n                    <box>\r\n                        <size> 1 1 1 </size> <!-- size value has whitespace at the front-->\r\n                    </box>\r\n                </geometry>\r\n            </visual>\r\n        </link>\r\n    </model>\r\n</sdf>\r\n```\r\n\r\nBecause before parse the value of <size> tag, value string is splited to \\[\u201c \u201c, size\\_x,  size\\_y, size\\_z, \u201c \u201c\\] when value string contain white space at front.\r\n\r\nIt occurs when parseSize function split \u2018sizeStr\u2019 with \u2018\\\\s\\+\u2019regex.\r\n\r\nSo when trim\\(\\) was added to remove the space, it was confirmed that the model with the box size containing front of white space could be spawned\r\n\r\n```javascript\r\n---  var values = sizeStr.split(/\\s+/); \r\n+++  var values = sizeStr.trim().split(/\\s+/);  \r\n```", "old": "A Model who has box geometry link does not spawned, when \\\\<size\\\\> tag\u2019s value in \\\\<box\\\\> geometry has white space at the front.\r\n\r\nExample\r\n\r\n```xml\r\n&lt;?xml version=&#34;1.0&#34; ?&gt;\r\n&lt;sdf version=&#34;1.4&#34;&gt;\r\n    &lt;model name=&#39;a_model&#39;&gt;\r\n        &lt;link name=&#39;box_shape_linnk&#39;&gt;\r\n            &lt;pose&gt; 0 0 0 0 0 0 &lt;/pose&gt;\r\n            &lt;collision name=&#39;col_box&#39;&gt;\r\n                &lt;geometry&gt;\r\n                    &lt;box&gt;\r\n                        &lt;size&gt; 1 1 1 &lt;/size&gt;\r\n                    &lt;/box&gt;\r\n                &lt;/geometry&gt;\r\n            &lt;/collision&gt;\r\n            &lt;visual name=&#39;vis_box&#39;&gt;\r\n                &lt;geometry&gt;\r\n                    &lt;box&gt;\r\n                        &lt;size&gt; 1 1 1 &lt;/size&gt; &lt;!-- size value has whitespace at the front--&gt;\r\n                    &lt;/box&gt;\r\n                &lt;/geometry&gt;\r\n            &lt;/visual&gt;\r\n        &lt;/link&gt;\r\n    &lt;/model&gt;\r\n&lt;/sdf&gt;\r\n```\r\n\r\nBecause before parse the value of \\\\<size\\\\> tag, value string is splited to \\\\\\[\u201c \u201c,  size\\_x, , size\\_y, size\\_z, \u201c \u201c\\\\\\] when value string contain white space at front.\r\n\r\nIt occurs when parseSize function split \u2018sizeStr\u2019 with &amp;#39;\\\\s\\+&amp;#39; regex.\r\n\r\nSo when trim\\(\\) was added to remove the space, it was confirmed that the model with the box size containing front of white space could be spawned\r\n\r\n```javascript\r\n---  var values = sizeStr.split(/\\s+/); \r\n+++  var values = sizeStr.trim().split(/\\s+/);  \r\n```"}}, "links": {"self": {"href": "data/repositories/osrf/gzweb/issues/166/changes/53537671.json"}, "html": {"href": "#!/osrf/gzweb/issues/166#comment-53537671"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gzweb/issues/166.json"}}, "type": "issue", "id": 166, "repository": {"links": {"self": {"href": "data/repositories/osrf/gzweb.json"}, "html": {"href": "#!/osrf/gzweb"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3e2fc3f2-dc25-453b-9792-943c743d9b40}ts=1609263"}}, "type": "repository", "name": "gzweb", "full_name": "osrf/gzweb", "uuid": "{3e2fc3f2-dc25-453b-9792-943c743d9b40}"}, "title": "@gzsdfparser.js parse white space incorrectly"}, "created_on": "2019-08-22T02:51:10.575171+00:00", "user": {"display_name": "myungkeun Lee", "uuid": "{09d23b1a-5a89-430e-a6de-2f7b1afa8bc9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B09d23b1a-5a89-430e-a6de-2f7b1afa8bc9%7D"}, "html": {"href": "https://bitbucket.org/%7B09d23b1a-5a89-430e-a6de-2f7b1afa8bc9%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/c15f11047bb98b3e2bcdb4bc87822f1dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsML-5.png"}}, "nickname": "myungkeun Lee", "type": "user", "account_id": "5d5dec2088d5680d3709a77c"}, "message": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "type": "issue_change", "id": 53537671}