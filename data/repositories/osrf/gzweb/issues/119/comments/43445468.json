{"links": {"self": {"href": "data/repositories/osrf/gzweb/issues/119/comments/43445468.json"}, "html": {"href": "#!/osrf/gzweb/issues/119#comment-43445468"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/gzweb/issues/119.json"}}, "type": "issue", "id": 119, "repository": {"links": {"self": {"href": "data/repositories/osrf/gzweb.json"}, "html": {"href": "#!/osrf/gzweb"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3e2fc3f2-dc25-453b-9792-943c743d9b40}ts=1609263"}}, "type": "repository", "name": "gzweb", "full_name": "osrf/gzweb", "uuid": "{3e2fc3f2-dc25-453b-9792-943c743d9b40}"}, "title": "Polylines Geometry."}, "content": {"raw": "I've had a look at my trials before to implement this, I've made a hack, I still could not prove that it will generalize on all models that have polylines, but here are the observations that I've based my algorithm on.\n\nI've noticed that for the first polyline that we parse we should draw it and fill in between and add thickness of course, so if it was a circle it is rendered as a coin, but before we render it we check the next `polyline` if it turned to be inside the previous  `polyline`, then the second `polyline` shape is just a hole in the first shape.\nI've tried this with the `Arrow red`, and `hoop (red)` and the `Korean Thankyou` models.\n\nThe code is almost complete, but I just want a feedback to see if its okay to do that as this is very different from what we are doing in gazebo.\n\nI guess the problem that i've faced was finding the triangulation algorithm that would make gzweb behave like gazebo.\n\n@chapulina", "markup": "markdown", "html": "<p>I've had a look at my trials before to implement this, I've made a hack, I still could not prove that it will generalize on all models that have polylines, but here are the observations that I've based my algorithm on.</p>\n<p>I've noticed that for the first polyline that we parse we should draw it and fill in between and add thickness of course, so if it was a circle it is rendered as a coin, but before we render it we check the next <code>polyline</code> if it turned to be inside the previous  <code>polyline</code>, then the second <code>polyline</code> shape is just a hole in the first shape.\nI've tried this with the <code>Arrow red</code>, and <code>hoop (red)</code> and the <code>Korean Thankyou</code> models.</p>\n<p>The code is almost complete, but I just want a feedback to see if its okay to do that as this is very different from what we are doing in gazebo.</p>\n<p>I guess the problem that i've faced was finding the triangulation algorithm that would make gzweb behave like gazebo.</p>\n<p>@chapulina</p>", "type": "rendered"}, "created_on": "2018-02-21T07:35:17.224964+00:00", "user": {"display_name": "Mohamd Ayman", "uuid": "{72e87935-5983-4f36-8505-0c88a6493930}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B72e87935-5983-4f36-8505-0c88a6493930%7D"}, "html": {"href": "https://bitbucket.org/%7B72e87935-5983-4f36-8505-0c88a6493930%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:53a1879d-b572-46c9-97d3-8fa52b2ff8a7/d5d765e0-f86b-4c0d-93ed-c67429f1f465/128"}}, "nickname": "Mohamd Ayman", "type": "user", "account_id": "557058:53a1879d-b572-46c9-97d3-8fa52b2ff8a7"}, "updated_on": null, "type": "issue_comment", "id": 43445468}